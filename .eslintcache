[{"/home/wisdom/Documents/projects/ocs/src/index.js":"1","/home/wisdom/Documents/projects/ocs/src/App.js":"2","/home/wisdom/Documents/projects/ocs/src/Pages/StudentLogin.js":"3","/home/wisdom/Documents/projects/ocs/src/Pages/StaffLogin.js":"4","/home/wisdom/Documents/projects/ocs/src/Pages/StaffDashboard.js":"5","/home/wisdom/Documents/projects/ocs/src/Pages/StudentRegister.js":"6","/home/wisdom/Documents/projects/ocs/src/Components/NavBar.js":"7","/home/wisdom/Documents/projects/ocs/src/Components/StaffSidebar.js":"8","/home/wisdom/Documents/projects/ocs/src/Pages/AddStudentData.js":"9","/home/wisdom/Documents/projects/ocs/src/utils/firebaseConfig.js":"10","/home/wisdom/Documents/projects/ocs/src/Pages/StudentDashboard.js":"11","/home/wisdom/Documents/projects/ocs/src/Components/StudentSidebar.js":"12","/home/wisdom/Documents/projects/ocs/src/Components/StudentNavbar.js":"13","/home/wisdom/Documents/projects/ocs/src/Pages/CreateClearanceRequest.js":"14","/home/wisdom/Documents/projects/ocs/src/Pages/StudentDashboardDetails.js":"15","/home/wisdom/Documents/projects/ocs/src/Pages/AddUser.js":"16","/home/wisdom/Documents/projects/ocs/src/utils/firebaseConfigSecondary.js":"17","/home/wisdom/Documents/projects/ocs/src/Pages/ViewStaff.js":"18","/home/wisdom/Documents/projects/ocs/src/Pages/ViewStudentData.js":"19","/home/wisdom/Documents/projects/ocs/src/Pages/StaffViewClearanceRequest.js":"20","/home/wisdom/Documents/projects/ocs/src/Pages/StaffViewClearanceDetails.js":"21","/home/wisdom/Documents/projects/ocs/src/Pages/Home.js":"22","/home/wisdom/Documents/projects/ocs/src/Components/clientNavBar.js":"23"},{"size":412,"mtime":1607530461877,"results":"24","hashOfConfig":"25"},{"size":2413,"mtime":1607859813974,"results":"26","hashOfConfig":"25"},{"size":4605,"mtime":1607859109989,"results":"27","hashOfConfig":"25"},{"size":3405,"mtime":1607859172823,"results":"28","hashOfConfig":"25"},{"size":13644,"mtime":1607852263832,"results":"29","hashOfConfig":"25"},{"size":12524,"mtime":1607859259509,"results":"30","hashOfConfig":"25"},{"size":1593,"mtime":1607810556989,"results":"31","hashOfConfig":"25"},{"size":4168,"mtime":1607859389765,"results":"32","hashOfConfig":"25"},{"size":5146,"mtime":1607606724354,"results":"33","hashOfConfig":"25"},{"size":787,"mtime":1607531184311,"results":"34","hashOfConfig":"25"},{"size":5137,"mtime":1607903366435,"results":"35","hashOfConfig":"25"},{"size":1761,"mtime":1607859370081,"results":"36","hashOfConfig":"25"},{"size":1586,"mtime":1607640645680,"results":"37","hashOfConfig":"25"},{"size":12040,"mtime":1607804783487,"results":"38","hashOfConfig":"25"},{"size":9922,"mtime":1607858892161,"results":"39","hashOfConfig":"25"},{"size":6529,"mtime":1607791250106,"results":"40","hashOfConfig":"25"},{"size":807,"mtime":1607531214358,"results":"41","hashOfConfig":"25"},{"size":6160,"mtime":1607856042806,"results":"42","hashOfConfig":"25"},{"size":6625,"mtime":1607855679258,"results":"43","hashOfConfig":"25"},{"size":10283,"mtime":1607903502312,"results":"44","hashOfConfig":"25"},{"size":12408,"mtime":1607858949399,"results":"45","hashOfConfig":"25"},{"size":1002,"mtime":1607860535284,"results":"46","hashOfConfig":"25"},{"size":1603,"mtime":1607860592230,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"h2uew7",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"50"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},"/home/wisdom/Documents/projects/ocs/src/index.js",[],["113","114"],"/home/wisdom/Documents/projects/ocs/src/App.js",[],"/home/wisdom/Documents/projects/ocs/src/Pages/StudentLogin.js",["115","116","117"],"import React, {useState} from 'react'\n\n// react router dom\nimport {useHistory, Link} from 'react-router-dom'\n\n// react toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n// firebase app\nimport app from '../utils/firebaseConfig';\n\n\n\nconst StudentLogin = () => {\n\n\n    // init student login data\n    const [studentData, setStudentData] = useState({\n        regNo: '',\n        password: '',\n        loginButtonText: 'Login'\n    })\n\n    // init usehistory\n    const history = useHistory()\n\n\n    // destructure\n    const {regNo, password, loginButtonText} = studentData\n\n\n    // handle Change\n    const handleChange = (data) => (e) => {\n        setStudentData({...studentData, [data]: e.target.value})\n    }\n\n\n\n    // handle Submit\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        // set login button text to loading\n        setStudentData({...studentData, loginButtonText: \"Loading...\"})\n\n\n        // validate\n        if(!regNo) {\n            setStudentData({...studentData, loginButtonText: \"Login\"})\n            return toast.error(\"Please enter registration number\")\n        }\n\n        if(!password) {\n            setStudentData({...studentData, loginButtonText: \"Login\"})\n            return toast.error(\"Please enter password\")\n        }\n\n        // Find student with registration number\n        app.database().ref('Student').orderByChild('regNo').equalTo(regNo).on(\"value\", (snapshot) => {\n            if(snapshot.val()) {\n                 // set login button text to login\n                setStudentData({...studentData, loginButtonText: \"Login\"})\n\n                let studentEmail;\n\n                // Get student Email from data\n                Object.keys(snapshot.val()).map((key) => {\n                    studentEmail = snapshot.val()[key].email\n                })\n\n                \n                // Login Student\n                    app.auth().signInWithEmailAndPassword(studentEmail, password)\n                    .then((success) => {\n                        // redirect user to dashboard\n                        history.push('/student/dashboard')\n\n                    })\n                    .catch((error) => {\n                        // set login button text to login\n                        setStudentData({...studentData, loginButtonText: \"Login\"})\n                        console.log(error)\n                        return toast.error(error.message)\n                    })\n\n            } else {\n                 // set login button text to login\n                 setStudentData({...studentData, loginButtonText: \"Login\"})\n                console.log(\"Student with reg number not found\")\n                return toast.error(\"Student with reg number not found\")\n            }\n        })\n        \n    }\n\n    return (\n        <React.Fragment>\n\n            <ToastContainer/>\n\n            <div className=\"wrapper vh-100\" style={{overflow: \"auto\"}}>\n                <div className=\"row align-items-center h-100\">\n                    <form onSubmit={handleSubmit} className=\"col-lg-3 col-md-4 col-10 mx-auto text-center\">\n                    <img src=\"/assets/images/eua-logo.png\"></img>\n                    <a className=\"navbar-brand mx-auto mt-2 flex-fill text-center\">\n                       <h2>Student Login</h2>\n                    </a>\n                    <h1 className=\"h5 mb-3\">Sign in</h1>\n                    <div className=\"form-group\">\n                       \n                        <input value={regNo} name=\"regNo\" onChange={handleChange('regNo')} type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Registration Number\" required=\"\" autofocus=\"\" />\n                    </div>\n                    <div className=\"form-group\">\n                      \n                        <input value={password} name=\"password\" onChange={handleChange('password')} type=\"password\"  className=\"form-control form-control-lg\" placeholder=\"Password\" required=\"\" />\n                    </div>\n                        <button className=\"btn mb-4 btn-lg btn-primary btn-block\" type=\"submit\">{loginButtonText}</button>\n                    <Link className=\"mt-5\" to=\"/student/register\">Don't have an account? Register</Link>\n                    \n                    <div>\n                    <Link className=\"mt-5\" to=\"/staff/login\">Login as staff</Link>\n                    </div>\n                    <p className=\"mt-5 mb-3 text-muted\">© 2020</p>\n                    </form>\n                </div>\n                </div>\n    \n     \n            \n        </React.Fragment>\n    )\n}\n\nexport default StudentLogin\n","/home/wisdom/Documents/projects/ocs/src/Pages/StaffLogin.js",["118","119"],"import React, {useState} from 'react'\n\n// react router dom\nimport {useHistory, Link} from 'react-router-dom'\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n// react toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nconst StaffLogin = () => {\n\n    // init login data state\n    const [loginData, setLoginData] = useState({\n        email: \"\",\n        password: \"\",\n        loginBtn: \"Login\"\n    })\n\n    // init history\n    const history = useHistory()\n\n    // destructure login Data\n    const {email, password, loginBtn} = loginData\n\n\n\n    // handle Change\n    const handleChange = (data) => (e) => {\n        setLoginData({...loginData, [data]: e.target.value})\n\n      \n    }\n\n    // handle submit\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        // set login btn to loading\n        setLoginData({...loginData, loginBtn: \"Loading...\"})\n\n        // validate data\n        if(!email) {\n            return toast.error(\"Please enter email\")\n        }\n\n        if(!password) {\n            return toast.error(\"Please enter password\")\n        }\n\n        // firebase sign in staff\n         // sign in\n         app.auth().signInWithEmailAndPassword(email, password)\n         .then((success) => {\n              // set login btn to loading\n            setLoginData({...loginData, loginBtn: \"Login\"})\n             // redirect user to dashboard\n             history.push('/staff/dashboard')\n \n         })\n         .catch((error) => {\n             // set login btn to loading\n             setLoginData({...loginData, loginBtn: \"Login\"})\n             console.log(error)\n             return alert(error.message)\n         })\n        \n       \n    }\n\n    return (\n        <React.Fragment>\n                <ToastContainer/>\n                <div className=\"wrapper vh-100\" style={{overflow: \"auto\"}}>\n                <div className=\"row align-items-center h-100\">\n                    <form onSubmit={handleSubmit} className=\"col-lg-3 col-md-4 col-10 mx-auto text-center\">\n                    <img src=\"/assets/images/eua-logo.png\" style={{display: 'block', margin: \"auto\"}}></img>\n                    <a className=\"navbar-brand mx-auto mt-2 flex-fill text-center\">\n                       <h2>Online Clearance System</h2>\n                    </a>\n                    <h1 className=\"h5 mb-3\">Staff/Admin Login</h1>\n                    <div className=\"form-group\">\n                       \n                        <input onChange={handleChange('email')} name=\"email\" type=\"email\" id=\"inputEmail\" className=\"form-control form-control-lg\" placeholder=\"Email Address\" required=\"\" autofocus=\"\" />\n                    </div>\n                    <div className=\"form-group\">\n                      \n                        <input onChange={handleChange('password')} name=\"password\" type=\"password\" id=\"inputPassword\" className=\"form-control form-control-lg\" placeholder=\"Password\" required=\"\" />\n                    </div>\n                    <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">{loginBtn}</button>\n                    <Link className=\"mt-5\" to=\"/student/login\">Are you a student? Login</Link>\n                    <p className=\"mt-5 mb-3 text-muted\">© 2020</p>\n                    </form>\n                </div>\n                </div>\n            \n        </React.Fragment>\n    )\n}\n\nexport default StaffLogin\n","/home/wisdom/Documents/projects/ocs/src/Pages/StaffDashboard.js",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"import React, {useEffect, useState} from 'react'\n\n\n// NavBar\nimport NavBar from '../Components/NavBar'\n\n// Sidebar\nimport StaffSidebar from '../Components/StaffSidebar'\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n// react router dom\nimport {useHistory, Link} from 'react-router-dom'\n\n\n\nconst StaffDashboard = () => {\n\n  // init userAuthenticated\n  const [userAuthenticated, setUserAuthenticated] = useState(false)\n\n  // init clearance request\n  const [clearanceRequest, setClearanceRequest] = useState({})\n\n  // init cleared students state\n  const [clearedStudents, setClearedStudents] = useState({})\n\n  // init student data state\n  const [studentData, setStudentData] = useState({})\n\n  // init history\n  const history = useHistory()\n\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      if(!user) {\n\n          // return to login\n          return history.push({pathname: '/staff/login'}) \n      } else {\n         \n         setUserAuthenticated(true)\n\n        // fetch clearance request\n        app.database().ref().child(\"ClearanceRequest\").on(\"value\", (snapshot) => {\n          if(snapshot.val()) {\n            // update clearance request state\n            setClearanceRequest(snapshot.val())\n\n            // fetch cleared students\n            app.database().ref('ClearanceRequest').orderByChild('status').equalTo(\"Cleared\").on(\"value\", (snapshot) => {\n              if(snapshot.val()) {\n                  setClearedStudents(snapshot.val())\n              } else {\n                setClearedStudents({})\n              }\n            })\n\n            // fetch students data\n            app.database().ref().child(\"StudentData\").on(\"value\", (snapshot) => {\n              if(snapshot.val()) {\n                // update student data state\n                setStudentData(snapshot.val())\n              }\n            })\n          }\n        })\n\n      }\n  })\n  }, [])\n\n    return (\n        <React.Fragment>\n            <NavBar/>\n            <StaffSidebar/>\n\n\n            <main role=\"main\" class=\"main-content\">\n        <div class=\"container-fluid\">\n          <div class=\"row justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"row\">\n              <div class=\"col-md-6 col-xl-4 mb-4\">\n                  <div class=\"card shadow border-0\">\n                    <div class=\"card-body\">\n                      <div class=\"row align-items-center\">\n                       \n                        <div class=\"col pr-0\">\n                          <p class=\"small text-muted mb-0\">Clearance Requests</p>\n                          <span class=\"h3 mb-0\">{clearanceRequest? Object.keys(clearanceRequest).length : 0}</span>\n                         \n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6 col-xl-4 mb-4\">\n                  <div class=\"card shadow border-0\">\n                    <div class=\"card-body\">\n                      <div class=\"row align-items-center\">\n                       \n                        <div class=\"col pr-0\">\n                          <p class=\"small text-muted mb-0\">Cleared Students</p>\n                          <span class=\"h3 mb-0\">{Object.keys(clearedStudents).length}</span>\n                          \n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6 col-xl-4 mb-4\">\n                  <div class=\"card shadow border-0\">\n                    <div class=\"card-body\">\n                      <div class=\"row align-items-center\">\n                       \n                        <div class=\"col pr-0\">\n                          <p class=\"small text-muted mb-0\">Students Data</p>\n                          <span class=\"h3 mb-0\">{Object.keys(studentData).length}</span>\n                        \n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                \n                </div>\n                </div>\n                </div>\n                </div>\n                </main>\n\n\n            <div class=\"wrapper\">\n      \n\n      <main role=\"main\" class=\"main-content\">\n        <div class=\"container-fluid\">\n          <div class=\"row justify-content-center\">\n                \n              <div class=\"row\">\n              \n                <div class=\"col-md-12\">\n                  <h6 class=\"mb-3\">Last orders</h6>\n                  <table class=\"table table-borderless table-striped\">\n                    <thead>\n                      <tr role=\"row\">\n                        <th>ID</th>\n                        <th>Purchase Date</th>\n                        <th>Name</th>\n                        <th>Phone</th>\n                        <th>Address</th>\n                        <th>Total</th>\n                        <th>Payment</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <th scope=\"col\">1331</th>\n                        <td>2020-12-26 01:32:21</td>\n                        <td>Kasimir Lindsey</td>\n                        <td>(697) 486-2101</td>\n                        <td>996-3523 Et Ave</td>\n                        <td>$3.64</td>\n                        <td> Paypal</td>\n                        <td>Shipped</td>\n                        <td>\n                          <div class=\"dropdown\">\n                            <button class=\"btn btn-sm dropdown-toggle more-vertical\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                              <span class=\"text-muted sr-only\">Action</span>\n                            </button>\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                              <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                              <a class=\"dropdown-item\" href=\"#\">Remove</a>\n                              <a class=\"dropdown-item\" href=\"#\">Assign</a>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"col\">1156</th>\n                        <td>2020-04-21 00:38:38</td>\n                        <td>Melinda Levy</td>\n                        <td>(748) 927-4423</td>\n                        <td>Ap #516-8821 Vitae Street</td>\n                        <td>$4.18</td>\n                        <td> Paypal</td>\n                        <td>Pending</td>\n                        <td>\n                          <div class=\"dropdown\">\n                            <button class=\"btn btn-sm dropdown-toggle more-vertical\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                              <span class=\"text-muted sr-only\">Action</span>\n                            </button>\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                              <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                              <a class=\"dropdown-item\" href=\"#\">Remove</a>\n                              <a class=\"dropdown-item\" href=\"#\">Assign</a>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"col\">1038</th>\n                        <td>2019-06-25 19:13:36</td>\n                        <td>Aubrey Sweeney</td>\n                        <td>(422) 405-2736</td>\n                        <td>Ap #598-7581 Tellus Av.</td>\n                        <td>$4.98</td>\n                        <td>Credit Card </td>\n                        <td>Processing</td>\n                        <td>\n                          <div class=\"dropdown\">\n                            <button class=\"btn btn-sm dropdown-toggle more-vertical\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                              <span class=\"text-muted sr-only\">Action</span>\n                            </button>\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                              <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                              <a class=\"dropdown-item\" href=\"#\">Remove</a>\n                              <a class=\"dropdown-item\" href=\"#\">Assign</a>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"col\">1227</th>\n                        <td>2021-01-22 13:28:00</td>\n                        <td>Timon Bauer</td>\n                        <td>(690) 965-1551</td>\n                        <td>840-2188 Placerat, Rd.</td>\n                        <td>$3.46</td>\n                        <td> Paypal</td>\n                        <td>Processing</td>\n                        <td>\n                          <div class=\"dropdown\">\n                            <button class=\"btn btn-sm dropdown-toggle more-vertical\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                              <span class=\"text-muted sr-only\">Action</span>\n                            </button>\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                              <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                              <a class=\"dropdown-item\" href=\"#\">Remove</a>\n                              <a class=\"dropdown-item\" href=\"#\">Assign</a>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"col\">1956</th>\n                        <td>2019-11-11 16:23:17</td>\n                        <td>Kelly Barrera</td>\n                        <td>(117) 625-6737</td>\n                        <td>816 Ornare, Street</td>\n                        <td>$4.16</td>\n                        <td>Credit Card </td>\n                        <td>Shipped</td>\n                        <td>\n                          <div class=\"dropdown\">\n                            <button class=\"btn btn-sm dropdown-toggle more-vertical\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                              <span class=\"text-muted sr-only\">Action</span>\n                            </button>\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                              <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                              <a class=\"dropdown-item\" href=\"#\">Remove</a>\n                              <a class=\"dropdown-item\" href=\"#\">Assign</a>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"col\">1669</th>\n                        <td>2021-04-12 07:07:13</td>\n                        <td>Kellie Roach</td>\n                        <td>(422) 748-1761</td>\n                        <td>5432 A St.</td>\n                        <td>$3.53</td>\n                        <td> Paypal</td>\n                        <td>Shipped</td>\n                        <td>\n                          <div class=\"dropdown\">\n                            <button class=\"btn btn-sm dropdown-toggle more-vertical\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                              <span class=\"text-muted sr-only\">Action</span>\n                            </button>\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                              <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                              <a class=\"dropdown-item\" href=\"#\">Remove</a>\n                              <a class=\"dropdown-item\" href=\"#\">Assign</a>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"col\">1909</th>\n                        <td>2020-05-14 00:23:11</td>\n                        <td>Lani Diaz</td>\n                        <td>(767) 486-2253</td>\n                        <td>3328 Ut Street</td>\n                        <td>$4.29</td>\n                        <td> Paypal</td>\n                        <td>Pending</td>\n                        <td>\n                          <div class=\"dropdown\">\n                            <button class=\"btn btn-sm dropdown-toggle more-vertical\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                              <span class=\"text-muted sr-only\">Action</span>\n                            </button>\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                              <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                              <a class=\"dropdown-item\" href=\"#\">Remove</a>\n                              <a class=\"dropdown-item\" href=\"#\">Assign</a>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div> \n              </div> \n            </div>\n            </div>\n            </main>\n        </div> \n\n\n            \n        </React.Fragment>\n    )\n}\n\nexport default StaffDashboard\n","/home/wisdom/Documents/projects/ocs/src/Pages/StudentRegister.js",["144","145","146"],"import React, {useState} from 'react'\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n\n// react router dom\nimport {useHistory, Link} from 'react-router-dom'\n\n// react toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction StudentRegister() {\n\n\n    // init Student Register State\n    const [studentRegisterData, setStudentRegisterData] = useState({\n        email: \"\",\n        regNo: \"\",\n        firstName: \"\",\n        middleName: \"\",\n        lastName: \"\",\n        college: \"\",\n        department: \"\",\n        course: \"\",\n        password: \"\",\n        registerBtnText: \"Register\"\n\n    })\n\n    const history = useHistory()\n\n    // destructure student register data\n    const {email, regNo, firstName, middleName, lastName, college, course, department, password, registerBtnText} = studentRegisterData\n\n\n    // handle Change\n    const handleChange = (data) => (e) => {\n        setStudentRegisterData({...studentRegisterData, [data]: e.target.value})\n\n       \n    }\n\n\n    // handle Submit\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        // set register button text to loading\n        setStudentRegisterData({...studentRegisterData, registerBtnText: \"Loading...\"})\n\n\n        // validate\n        if(!email) {\n            // set register button text to register\n            setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n            return toast.error(\"Please enter email address\")\n        }\n\n        if(!firstName) {\n             // set register button text to register\n             setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n            return toast.error(\"Please enter first name\")\n        }\n\n        if(!lastName) {\n             // set register button text to register\n             setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n            return toast.error(\"Please enter last name\")\n        }\n\n        if(!regNo) {\n             // set register button text to register\n             setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n            return toast.error(\"Please enter registration number\")\n        }\n\n        if(!college) {\n             // set register button text to register\n             setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n            return toast.error(\"Please select college\")\n        }\n        if(!department) {\n             // set register button text to register\n             setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n            return toast.error(\"Please select department\")\n        }\n        if(!course) {\n             // set register button text to register\n             setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n            return toast.error(\"Please select course\")\n        }\n        if(!password) {\n             // set register button text to register\n             setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n            return toast.error(\"Please enter password\")\n        }\n\n\n        // get studentRegister Data\n        const studentRegData = {\n            firstName: firstName,\n            lastName: lastName,\n            middleName: middleName,\n            regNo: regNo,\n            email: email,\n            course: course,\n            college: college,\n            department: department\n\n        }\n\n        // check student registration number exist\n        app.database().ref('StudentData').orderByChild('regNo').equalTo(regNo).on('value', (snapshot) => {\n            if(snapshot.val() !== null) {\n                 // set register button text to register\n                setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n\n\n                // init studentData uid\n                let studentDatauid;\n\n\n                 // check if student is registered\n                Object.keys(snapshot.val()).map((key, index) => {\n                    if(snapshot.val()[key].registered) {\n                        return toast.error(\"Student has already been registered\")\n                    } else {\n                        studentDatauid = key\n                    }\n                })\n\n\n                console.log(studentDatauid)\n\n                if(studentDatauid) {\n               \n                // create user with email and password\n                app.auth().createUserWithEmailAndPassword(email, password)\n                .then((data) => {\n\n                    // create student database using user id\n                    const rootRef = app.database().ref().child(\"Student\")\n\n                    // create a user Ref\n                    const userRef = rootRef.child(data.user.uid)\n\n                    // update data to database\n                    userRef.set(studentRegData, (error) => {\n                        if (error) {\n                            // set register button text to register\n                            setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n                            console.log(error)\n                           \n                        } else {\n                             // set register button text to register\n                            setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n\n                            // set registered true to student Data\n                            const registeredData = {\n                                registered: true\n                            }\n\n                           \n                                app.database().ref().child(`StudentData/${studentDatauid}`).update(registeredData, (error) => {\n                                    if(error) {\n                                        // set register button text to register\n                                        setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n                                        console.log(error)\n                                        \n                                    \n                                    }\n\n                                    // set register button text to register\n                                    setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n                                    \n                                    // push to login\n                                    history.push('/student/login')\n                                })\n                            \n                            \n                        }\n\n                    })\n                })\n                .catch((error) => {\n                    console.log(error)\n                   \n                })\n            }else {\n                console.log(\"Student has been registered\")\n            }\n            \n\n            } else {\n                 // set register button text to register\n                 setStudentRegisterData({...studentRegisterData, registerBtnText: \"Register\"})\n                return toast.error(\"Oops! Student does not exist\")\n            }\n        })\n\n\n    }\n\n    return (\n        <React.Fragment>\n            <ToastContainer/>\n\n                <div className=\"wrapper vh-100\">\n                <div className=\"row align-items-center h-100\">\n                    <form onSubmit={handleSubmit} className=\"col-lg-6 col-md-8 col-10 mx-auto\">\n                    <div className=\"mx-auto text-center my-4\">\n                    <img src=\"/assets/images/eua-logo.png\" style={{display: 'block', margin: \"auto\"}}></img>\n                        <a className=\"navbar-brand mx-auto mt-2 flex-fill text-center\">\n                        <h2 className=\"my-3\">Student Register</h2>\n                        </a>\n                       \n                    </div>\n                    <div className=\"form-row\">\n\n                            {/* Email Address */}\n                            <div className=\"form-group col-md-6\">\n                                <label for=\"email\">Email</label>\n                                <input onChange={handleChange('email')} name=\"email\" type=\"email\" className=\"form-control\" id=\"email\" />\n                            </div>\n\n                                {/* Registration Number */}\n                            <div className=\"form-group col-md-6\">\n                                <label for=\"regNo\">Registration Number</label>\n                                <input onChange={handleChange('regNo')} name=\"regNo\" type=\"text\" className=\"form-control\" id=\"regNo\" />\n                            </div>\n                    </div>\n                   \n                    <div className=\"form-row\">\n                        {/* first Name */}\n                        <div className=\"form-group col-md-6\">\n                        <label for=\"firstname\">Firstname</label>\n                        <input value={firstName} onChange={handleChange('firstName')} name=\"firstName\" type=\"text\" id=\"firstname\" className=\"form-control\" />\n                        </div>\n                        {/* Middle Name */}\n                        <div className=\"form-group col-md-6\">\n                        <label for=\"firstname\">Middle Name</label>\n                        <input value={middleName} onChange={handleChange('middleName')} name=\"middleName\" type=\"text\" id=\"middlename\" className=\"form-control\" />\n                        </div>\n                        {/* Last Name */}\n                        <div className=\"form-group col-md-6\">\n                        <label for=\"lastname\">Lastname</label>\n                        <input value={lastName} onChange={handleChange('lastName')} name=\"lastName\" type=\"text\" id=\"lastname\" className=\"form-control\" />\n                        </div>\n                    </div>\n                        <div className=\"form-row\">\n                        {/* College */}\n                        <div className=\"form-group col-md-4\">\n                        <label for=\"college\">College</label>\n                        <select onChange={handleChange('college')} className=\"form-control\" id=\"college\">\n                          <option value=\"\">Select College</option>\n                          <option value=\"Science\">Science</option>\n                         \n                        </select>\n                        </div>\n                        {/* Department */}\n                        <div className=\"form-group col-md-4\">\n                        <label for=\"department\">Department</label>\n                        <select  onChange={handleChange('department')} className=\"form-control\" id=\"department\">\n                          <option value=\"\">Select Department</option>\n                          <option value=\"Computer Science &amp; Mathematics\">Computer Science &amp; Mathematics</option>\n                        </select>\n                        </div>\n\n                        {/* Course */}\n                        <div className=\"form-group col-md-4\">\n                        <label for=\"course\">Course</label>\n                        <select onChange={handleChange('course')} className=\"form-control\" id=\"course\">\n                          <option value=\"\">Select Course</option>\n                          <option value=\"Computer Science\">Computer Science</option>\n                          <option value=\"Mathematics\">Mathematics</option>\n                         \n                        </select>\n                        </div>\n                    </div>\n                    <hr className=\"my-4\" />\n                    <div className=\"form-row\">\n                        {/* Password */}\n                        <div className=\"form-group col-md-12\">\n                        <label for=\"password\">Password</label>\n                        <input value={password} onChange={handleChange('password')} name=\"password\" type=\"password\" id=\"password\" className=\"form-control\" />\n                        </div>\n                       \n                    </div>\n                    \n                    <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">{registerBtnText}</button>\n                    <Link className=\"mt-5\" to=\"/student/login\">Already have an account? Login</Link>\n                    <p className=\"mt-5 mb-3 text-muted text-center\">© 2020</p>\n                    </form>\n                </div>\n                </div>\n                \n        </React.Fragment>\n    )\n}\n\nexport default StudentRegister\n","/home/wisdom/Documents/projects/ocs/src/Components/NavBar.js",["147","148"],"import React, {useState} from 'react'\n\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n\nconst NavBar =() => {\n\n\n    const [userData, setUserData] = useState(null)\n\n\n    const userID = app.auth().currentUser ? app.auth().currentUser.uid : \"\"\n\n\n    app.database().ref('Staff/'+userID).once('value')\n    .then((snapshot) => {\n\n      if(snapshot.val()) {\n           // set User Data\n        setUserData(snapshot.val().firstName ? snapshot.val().firstName : \"\")\n      } else {\n        setUserData(\"Admin\")\n      } \n    })\n    .catch((error) => {\n        console.log(error.message)\n    })\n\n    return (\n        <React.Fragment>\n\n<nav class=\"topnav navbar navbar-light\">\n        <button type=\"button\" class=\"navbar-toggler text-muted mt-2 p-0 mr-3 collapseSidebar\">\n          <i class=\"fe fe-menu navbar-toggler-icon\"></i>\n        </button>\n        \n        <ul class=\"nav\">\n          <li class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle text-muted pr-0\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              <span class=\"avatar avatar-sm mt-2\">\n                <span href=\"#\">{userData}</span>\n              </span>\n            </a>\n            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\n             \n              <a class=\"dropdown-item\" onClick={() => app.auth().signOut()} >Logout</a>\n             \n            </div>\n          </li>\n        </ul>\n      </nav>\n              \n        </React.Fragment>\n    )\n}\n\nexport default NavBar\n","/home/wisdom/Documents/projects/ocs/src/Components/StaffSidebar.js",["149","150"],"import React, {useState} from 'react'\n\n\n// react router dom\nimport {Link} from 'react-router-dom'\n\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n\nconst StaffSidebar = () => {\n\n        const [isAdmin, setIsAdmin] = useState(false)\n\n\n        const userID = app.auth().currentUser ? app.auth().currentUser.uid : \"\"\n\n\n        app.database().ref('Staff/'+userID).once('value')\n        .then((snapshot) => {\n\n          if(snapshot.val()) {\n              // set User Data\n              setIsAdmin(false)\n          } else {\n            setIsAdmin(true)\n          } \n        })\n        .catch((error) => {\n            console.log(error.message)\n        })\n\n\n    return (\n        <React.Fragment>\n\n<aside class=\"sidebar-left border-right bg-white shadow\" id=\"leftSidebar\" data-simplebar>\n        <a href=\"#\" class=\"btn collapseSidebar toggle-btn d-lg-none text-muted ml-2 mt-3\" data-toggle=\"toggle\">\n          <i class=\"fe fe-x\"><span class=\"sr-only\"></span></i>\n        </a>\n        <nav class=\"vertnav navbar navbar-light\">\n        \n          <div class=\"w-100 mb-4 d-flex\">\n          <a class=\"navbar-brand mx-auto mt-2 flex-fill text-center\" href=\"./index.html\">\n            <img src=\"/assets/images/eua-logo.png\" style={{height: 50, width: 50}}></img>\n              <h5 className=\"mt-2\">Online Clearance System</h5>\n              </a>\n          </div>\n          <ul class=\"navbar-nav flex-fill w-100 mb-2\">\n            <li class=\"nav-item dropdown\">\n              <a href=\"#dashboard\" data-toggle=\"collapse\" aria-expanded=\"false\" class=\"dropdown-toggle nav-link\">\n                <i class=\"fe fe-home fe-16\"></i>\n                <span class=\"ml-3 item-text\">Dashboard</span><span class=\"sr-only\">(current)</span>\n              </a>\n              <ul class=\"collapse list-unstyled pl-4 w-100\" id=\"dashboard\">\n                <li class=\"nav-item active\">\n                  <Link to=\"/staff/dashboard\" class=\"nav-link pl-3\" href=\"./index.html\"><span class=\"ml-1 item-text\">Home</span></Link>\n                </li>\n                <li class=\"nav-item active\">\n                  <Link to=\"/staff/dashboard/clearance/requests\" class=\"nav-link pl-3\"><span class=\"ml-1 item-text\">View Clearance Request</span></Link>\n                </li>\n              \n               \n              </ul>\n            </li>\n          </ul>\n\n\n\n          <ul class=\"navbar-nav flex-fill w-100 mb-2\">\n            <li class=\"nav-item dropdown\">\n              <a href=\"#ui-elements\" data-toggle=\"collapse\" aria-expanded=\"false\" class=\"dropdown-toggle nav-link\">\n                <i class=\"fe fe-box fe-16\"></i>\n                <span class=\"ml-3 item-text\">Students Data</span>\n              </a>\n              <ul class=\"collapse list-unstyled pl-4 w-100\" id=\"ui-elements\">\n                <li class=\"nav-item\">\n                  <Link to=\"/student/data/view\" class=\"nav-link pl-3\" ><span class=\"ml-1 item-text\">View Students Data</span>\n                  </Link>\n                </li>\n                <li class=\"nav-item\">\n                  <Link to=\"/student/data/add\" class=\"nav-link pl-3\" ><span class=\"ml-1 item-text\">Add Students Data</span>\n                  </Link>\n                </li>\n                \n              </ul>\n            </li>\n\n            {isAdmin?  <li class=\"nav-item dropdown\">\n              <a href=\"#forms\" data-toggle=\"collapse\" aria-expanded=\"false\" class=\"dropdown-toggle nav-link\">\n              <i class=\"fe fe-user fe-16\"></i>\n                <span class=\"ml-3 item-text\">Users</span>\n              </a>\n              <ul class=\"collapse list-unstyled pl-4 w-100\" id=\"forms\">\n                <li class=\"nav-item\">\n                  <Link to=\"/view/staff\" class=\"nav-link pl-3\"><span class=\"ml-1 item-text\">View Staff</span></Link>\n                  <Link to=\"/user/add\" class=\"nav-link pl-3\"><span class=\"ml-1 item-text\">Add Staff</span></Link>\n                </li>\n               \n                \n              </ul>\n            </li> : \n              null\n            }\n          \n           \n           \n           \n          </ul>\n         \n        </nav>\n      </aside>\n            \n        </React.Fragment>\n    )\n}\n\nexport default StaffSidebar\n","/home/wisdom/Documents/projects/ocs/src/Pages/AddStudentData.js",["151","152","153"],"import React, {useState, useEffect} from 'react'\n\n// NavBar\nimport NavBar from '../Components/NavBar'\n\n// Sidebar\nimport StaffSidebar from '../Components/StaffSidebar'\n\n// react router dom\nimport {useHistory, Link} from 'react-router-dom'\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n\n// react toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n\n\nfunction AddStudentData() {\n\n   // init userAuthenticated\n   const [userAuthenticated, setUserAuthenticated] = useState(false)\n\n   // init history\n   const history = useHistory()\n \n \n   useEffect(() => {\n     app.auth().onAuthStateChanged((user) => {\n       if(!user) {\n \n           // return to login\n           return history.push({pathname: '/staff/login'}) \n       } else {\n          \n          setUserAuthenticated(true)\n \n       }\n   })\n   }, [])\n\n  //  init student Data state\n  const [studentData, setStudentData] = useState({\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    regNo: \"\",\n    addStudentBtn: \"Add Student Data\"\n  })\n\n  // destructure\n  const {firstName, middleName, lastName, regNo, addStudentBtn} = studentData\n\n\n  // handle Change\n  const handleChange = (data) => (e) => {\n    // set StudentData\n    setStudentData({...studentData, [data]: e.target.value})\n\n  }\n\n  // handle Submit\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    // set add student data to loading\n    setStudentData({...studentData, addStudentBtn: \"Loading...\"})\n\n    // validate\n    if(!firstName) {\n       // set add student data to loading\n      setStudentData({...studentData, addStudentBtn: \"Add Student Data\"})\n      return toast.error(\"Please enter first name\")\n    }\n\n\n    if(!lastName) {\n        // set add student data to loading\n       setStudentData({...studentData, addStudentBtn: \"Add Student Data\"})\n       return toast.error(\"Please enter last name\")\n    }\n\n    if(!regNo) {\n         // set add student data to loading\n       setStudentData({...studentData, addStudentBtn: \"Add Student Data\"})\n       return toast.error(\"Please enter registration number\")\n    }\n\n    // get Add student data\n    const getStudentData = {\n      firstName,\n      middleName,\n      lastName,\n      regNo\n    }\n\n      // Add student data\n      app.database().ref().child('StudentData').push(getStudentData, (error) => {\n        if(error) {\n          return toast.error(\"Oops! An error has occured\")\n        }\n         // set add student data to loading\n        setStudentData({...studentData, addStudentBtn: \"Add Student Data\"})\n        return toast.success(\"Student Data added successfully\")\n      })\n\n  }\n\n\n\n    return (\n        <React.Fragment>\n            <ToastContainer/>\n            <NavBar/>\n            <StaffSidebar/>\n\n            <main role=\"main\" class=\"main-content\">\n        <div class=\"container-fluid\">\n          <div class=\"row justify-content-center\">\n            <div class=\"col-12 col-xl-10\">\n              <div class=\"row align-items-center my-4\">\n                <div class=\"col\">\n                  <h2 class=\"h3 mb-0 page-title\">Add Student Data</h2>\n                </div>\n                \n              </div>\n              <form onSubmit={handleSubmit}>\n                <hr class=\"my-4\" />\n                \n                <div class=\"form-row\">\n                    {/* first name */}\n                  <div class=\"form-group col-md-4\">\n                    <label for=\"firstname\">Firstname</label>\n                    <input  onChange={handleChange('firstName')} name=\"firstName\" type=\"text\" id=\"firstname\" class=\"form-control\" />\n                  </div>\n                  {/* middlename */}\n                  <div class=\"form-group col-md-4\">\n                    <label for=\"middlename\">Middlename</label>\n                    <input onChange={handleChange('middleName')} name=\"middleName\" type=\"text\" id=\"middlename\" class=\"form-control\" />\n                  </div>\n                    {/* lastname */}\n                  <div class=\"form-group col-md-4\">\n                    <label for=\"lastname\">Lastname</label>\n                    <input onChange={handleChange('lastName')} name=\"lastName\" type=\"text\" id=\"lastname\" class=\"form-control\" />\n                  </div>\n                </div>\n                <div class=\"form-row\">\n                  <div class=\"form-group col-md-12\">\n                    <label for=\"regNo\">Registration Number</label>\n                    <input onChange={handleChange('regNo')} name=\"regNo\" type=\"text\" class=\"form-control\" id=\"regNo\" />\n                  </div>\n                 \n                </div>\n                \n                <hr class=\"my-4\" />\n                <div class=\"form-row\">\n                  <div class=\"col-md-6\">\n                   \n                  <div class=\"col-md-6 text-right\">\n                    <button type=\"submit\" class=\"btn btn-primary\">{addStudentBtn}</button>\n                  </div>\n                </div>\n                </div>\n              </form>\n            </div> \n          </div> \n        </div> \n        \n      </main> \n            \n        </React.Fragment>\n    )\n}\n\nexport default AddStudentData\n","/home/wisdom/Documents/projects/ocs/src/utils/firebaseConfig.js",[],"/home/wisdom/Documents/projects/ocs/src/Pages/StudentDashboard.js",["154","155","156"],"import React, {useEffect, useState} from 'react'\n\n\n// NavBar\nimport StudentNavbar from '../Components/StudentNavbar'\n\n// Sidebar\nimport StudentSidebar from '../Components/StudentSidebar'\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n// react router dom\nimport {useHistory, Link} from 'react-router-dom'\n\n\n\nconst StudentDashboard = () => {\n\n\n    // init userAuthenticated\n  const [userAuthenticated, setUserAuthenticated] = useState(null)\n\n  // init clearance Request state\n  const [clearanceRequest, setClearanceRequest] = useState({})\n\n  // init student data state\n  const [studentData, setStudentData] = useState({})\n\n  // init history\n  const history = useHistory()\n\n\n  useEffect(() => {\n        app.auth().onAuthStateChanged((user) => {\n          if(!user) {\n\n              // return to login\n              return history.push({pathname: '/student/login'}) \n          } else {\n\n            // get current authenticated student details\n            app.database().ref().child(`Student/${user.uid}`).on(\"value\", (snapshot) => {\n              if(snapshot.val()) {\n\n                // update studentData\n                setStudentData(snapshot.val())\n\n                // // set user id\n                // setUserAuthenticated(user.uid) \n\n                // fetch clearance request for user id\n                // Find student with registration number\n                app.database().ref('ClearanceRequest').orderByChild('studentUid').equalTo(user.uid).on(\"value\", (snapshot) => {\n                  if(snapshot.val()) {\n                    // update clearance request\n                    setClearanceRequest(snapshot.val())\n\n                    console.log(snapshot.val())\n                  }\n                })\n              }\n            })\n\n\n            \n\n          }\n        })\n\n\n    \n        \n  }, [])\n\n\n     \n\n\n\n    return (\n        <React.Fragment>\n            <StudentNavbar/>\n            <StudentSidebar/>\n            <div class=\"wrapper\">\n\n            <main role=\"main\" class=\"main-content\">\n        <div class=\"container-fluid\">\n          <div class=\"row justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"row align-items-center my-4\">\n                <div class=\"col\">\n                  <h2 class=\"h3 mb-0 page-title\">My Clearance Request</h2>\n                </div>\n               \n              </div>\n             \n              <div class=\"card shadow\">\n                <div class=\"card-body\">\n                  <table class=\"table table-borderless table-hover\">\n                    <thead>\n                      <tr>\n                       \n                        <th>S/N</th>\n                        <th>Name</th>\n                        <th>Reg No</th>\n                        <th>Course</th>\n                        <th>Message</th>\n                        <th>Date</th>\n                        <th>Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {clearanceRequest? \n\n                      Object.keys(clearanceRequest).map((key, index) => {\n                       return <tr>\n                          <td>\n                              {index+1}\n                          </td>\n                          <td>\n                          <p class=\"mb-0 text-muted\"><Link to={`/student/dashboard/${key}`}><strong>{`${studentData? studentData.firstName: \"Nil\"} ${studentData? studentData.lastName: \"Nil\"}`}</strong></Link></p>\n                          </td>\n                          <td>\n                            <p class=\"mb-0 text-muted\"><strong>{studentData? studentData.regNo : \"Nil\"}</strong></p>\n                          \n                          </td>\n                          <td>\n                            <p class=\"mb-0 text-muted\">{studentData? studentData.course : \"Nil\"}</p>\n                            \n                          </td>\n                          <td>\n                            <small class=\"mb-0 text-muted\">{clearanceRequest[key].message? clearanceRequest[key].message : \"None\"}</small>\n                          </td>\n                          <td class=\"text-muted\">{clearanceRequest[key].createdAt? clearanceRequest[key].createdAt : \"None\"}</td>\n                          {clearanceRequest[key].status === \"Pending\" ?  <td><span class=\"badge badge-warning\">Pending</span></td> : \n                              clearanceRequest[key].status === \"Rejected\" ? <td><span class=\"badge badge-danger\">Declined</span></td> : \n                              <td><span class=\"badge badge-success\">Cleared</span></td>\n                          }\n                         \n                      </tr>\n                      })\n                    \n                     \n                      :\n                      <div>Loading...</div>\n                      }\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n             \n            </div>\n          </div> \n        </div>\n       \n       \n        \n      </main> \n     \n            </div> \n\n            \n        </React.Fragment>\n    )\n}\n\nexport default StudentDashboard\n","/home/wisdom/Documents/projects/ocs/src/Components/StudentSidebar.js",["157","158"],"import React from 'react'\n\n// react router dom\nimport {Link} from 'react-router-dom'\n\n\nconst StudentSidebar =() => {\n    return (\n        <React.Fragment>\n\n<aside class=\"sidebar-left border-right bg-white shadow\" id=\"leftSidebar\" data-simplebar>\n        <a href=\"#\" class=\"btn collapseSidebar toggle-btn d-lg-none text-muted ml-2 mt-3\" data-toggle=\"toggle\">\n          <i class=\"fe fe-x\"><span class=\"sr-only\"></span></i>\n        </a>\n        <nav class=\"vertnav navbar navbar-light\">\n        \n          <div class=\"w-100 mb-4 d-flex\">\n          \n            <a class=\"navbar-brand mx-auto mt-2 flex-fill text-center\" href=\"./index.html\">\n            <img src=\"/assets/images/eua-logo.png\" style={{height: 50, width: 50}}></img>\n              <h5 className=\"mt-2\">Online Clearance System</h5>\n              </a>\n          </div>\n          <ul class=\"navbar-nav flex-fill w-100 mb-2\">\n            <li class=\"nav-item\">\n              <Link to=\"/student/dashboard\" data-toggle=\"collapse\" aria-expanded=\"false\" class=\"nav-link\">\n                <i class=\"fe fe-home fe-16\"></i>\n                <span class=\"ml-3 item-text\">Dashboard</span><span class=\"sr-only\">(current)</span>\n              </Link>\n            </li>\n          </ul>\n         \n          <ul class=\"navbar-nav flex-fill w-100 mb-2\">\n            <li class=\"nav-item\">\n              <Link to=\"/student/create/clearance/request\" data-toggle=\"collapse\" aria-expanded=\"false\" class=\"nav-link\">\n                <i class=\"fe fe-box fe-16\"></i>\n                <span class=\"ml-3 item-text\">Create Clearance Request</span>\n              </Link>\n            </li>\n           \n          </ul>\n         \n        </nav>\n      </aside>\n            \n        </React.Fragment>\n    )\n}\n\nexport default StudentSidebar\n","/home/wisdom/Documents/projects/ocs/src/Components/StudentNavbar.js",["159","160","161"],"import React, {useState} from 'react'\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n\nconst StudentNavbar =() => {\n\n\n    const [userData, setUserData] = useState(null)\n\n\n    const userID = app.auth().currentUser ? app.auth().currentUser.uid : \"\"\n\n\n    app.database().ref('Student/'+userID).once('value')\n    .then((snapshot) => {\n        // set User Data\n        setUserData(snapshot.val().firstName ? snapshot.val().firstName : \"\")\n       \n       \n    })\n    .catch((error) => {\n        console.log(error.message)\n    })\n\n    return (\n        <React.Fragment>\n\n<nav class=\"topnav navbar navbar-light\">\n        <button type=\"button\" class=\"navbar-toggler text-muted mt-2 p-0 mr-3 collapseSidebar\">\n          <i class=\"fe fe-menu navbar-toggler-icon\"></i>\n        </button>\n        \n        <ul class=\"nav\">\n          <li class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle text-muted pr-0\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              <span class=\"avatar avatar-sm mt-2\">\n                <span href=\"#\">{userData}</span>\n              </span>\n            </a>\n            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\n              <a class=\"dropdown-item\" href=\"#\">Profile</a>\n              <a class=\"dropdown-item\" onClick={() => app.auth().signOut()} >Logout</a>\n             \n            </div>\n          </li>\n        </ul>\n      </nav>\n              \n        </React.Fragment>\n    )\n}\n\nexport default StudentNavbar\n","/home/wisdom/Documents/projects/ocs/src/Pages/CreateClearanceRequest.js",["162","163","164","165","166","167"],"import React, {useEffect, useState, useRef} from 'react'\n\n\n// NavBar\nimport StudentNavbar from '../Components/StudentNavbar'\n\n// Sidebar\nimport StudentSidebar from '../Components/StudentSidebar'\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n// react router dom\nimport {useHistory, Link} from 'react-router-dom'\n\n// react toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n\n\nconst CreateClearanceRequest = () => {\n\n\n     // init userAuthenticated\n        const [userAuthenticated, setUserAuthenticated] = useState(null)\n\n          // init student data state\n        const [studentData, setStudentData] = useState({})\n\n\n        // init history\n        const history = useHistory()\n\n\n        useEffect(() => {\n            app.auth().onAuthStateChanged((user) => {\n            if(!user) {\n\n                // return to login\n                return history.push({pathname: '/student/login'}) \n            } else {\n                \n                setUserAuthenticated(user.uid)\n\n                // get current authenticated student details\n            app.database().ref().child(`Student/${user.uid}`).on(\"value\",(snapshot) => {\n                if(snapshot.val()) {\n                    setStudentData(snapshot.val())\n                    console.log(snapshot.val())\n                }\n            })\n\n            }\n        })\n        }, [])\n\n\n        // init personal document state\n        const [personalDocuments, setPersonalDocuments] = useState([])\n\n        // init reciept document state\n        const [recieptDocuments, setRecieptDocuments] = useState([])\n\n        \n\n         // init reciept document state\n         const [courseFormDocuments, setCourseFormDocuments] = useState([])\n\n\n        //  init createClearanceBtn state\n        const [Loading, setLoading] = useState(false)\n        \n      \n\n\n\n            // Cloudinary Upload Widget\n        const personalDocumentWidget = () => {\n            window.cloudinary.openUploadWidget({ cloud_name: \"drfztez7u\", upload_preset: \"yypbmjlq\", tags:['documents']},\n                function(error, results) {\n\n                    if(error) {\n                        console.log(error)\n                       \n                    }\n                    \n                    const personaldoc = []\n                    // save result in state\n                    if(results) {\n                       \n                        //  iterate \n                        results.map((result) => {\n\n                            personaldoc.push(result.url)\n\n                            console.log(personaldoc)\n                            \n                            // update personal Documents\n                           setPersonalDocuments([...personalDocuments, ...personaldoc])\n\n                        \n                        })\n                       \n                    }\n\n                    \n\n                }); \n        }\n\n        const RecieptDocumentWidget = () => {\n            window.cloudinary.openUploadWidget({ cloud_name: \"drfztez7u\", upload_preset: \"yypbmjlq\", tags:['documents']},\n                function(error, results) {\n\n                    if(error) {\n                        console.log(error)\n                       \n                    }\n                    // init empty array\n                    const recieptDoc = []\n\n                    // save result in state\n                    if(results) {\n                    //  iterate \n                    results.map((result) => {\n                        // push to empty array \n                        recieptDoc.push(result.url)\n\n                        console.log(recieptDoc)\n\n                        // update personal Documents\n                        setRecieptDocuments([...recieptDocuments, ...recieptDoc])\n                       \n                    })\n                    }\n                    \n\n                }); \n        }\n\n\n        const CourseFormDocumentsWidget = () => {\n            window.cloudinary.openUploadWidget({ cloud_name: \"drfztez7u\", upload_preset: \"yypbmjlq\", tags:['documents']},\n                function(error, results) {\n\n                    if(error) {\n                        console.log(error)\n                       \n                    }\n\n                    // init empty array\n                    const courseFormDocs = []\n\n                    // save result in state\n                    if(results) {\n                    //  iterate \n                    results.map((result) => {\n                         // push to empty array \n                         courseFormDocs.push(result.url)\n\n                         console.log(courseFormDocs)\n                        // update personal Documents\n                        setCourseFormDocuments([...courseFormDocuments, ...courseFormDocs])\n                    })\n                    }\n                    \n\n                }); \n        }\n\n\n        // handle submit course request\n        const CourseRequestSubmit = () => {\n            // set Loading to true\n            setLoading(true)\n            // validate \n            if(personalDocuments.length === 0) {\n                // set Loading to false\n                setLoading(false)\n                return toast.error(\"Please upload the required documents\")\n            }\n\n            if(recieptDocuments.length === 0) {\n                // set Loading to false\n                setLoading(false)\n                return toast.error(\"Please upload scanned copies of reciepts\")\n            }\n\n            if(courseFormDocuments.length === 0) {\n                // set Loading to false\n                setLoading(false)\n                return toast.error(\"Please upload scanned copies of course forms\")\n            }\n\n            // get course request data\n            const clearanceRequestData = {\n                personalDocuments,\n                recieptDocuments,\n                courseFormDocuments,\n                studentUid: userAuthenticated,\n                studentFirstName: studentData.firstName,\n                studentLastName: studentData.lastName,\n                studentRegNo: studentData.regNo,\n                studentCourse: studentData.course,\n                studentDepartment: studentData.department,\n                status: \"Pending\",\n                createdAt: new Date().toDateString()\n            }\n\n\n            // push to database\n            app.database().ref().child('ClearanceRequest').push(clearanceRequestData, (error) => {\n                if(error) {\n                     // set Loading to false\n                setLoading(false)\n                return toast.error(\"Oops! An error has occured\")\n                }\n                \n                // set Loading to false\n                setLoading(false)\n                return toast.success(\"Clearance Request Uploaded successfully\")\n            })\n            \n        }\n\n    \n       \n\n    return (\n        <React.Fragment>\n\n            <StudentNavbar/>\n            <StudentSidebar/>\n            <ToastContainer/>\n\n                <main role=\"main\" className=\"main-content\">\n                    <div className=\"container-fluid\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12\">\n                        <h2 className=\"h5 page-title\">Personal Documents</h2>\n                        <p className=\"text-muted\">You are required to upload scanned copies of the following documents: <b>Waec Result, Jamb Result, Birth Certificate, State of Origin, Admission Letter</b></p>\n                            {/* Personal Documents Card */}\n                        <div onClick={() => personalDocumentWidget()} style={{cursor: \"pointer\"}} className=\"card shadow mb-4\">\n                            <div className=\"card-body text-center\">\n                            <a href=\"#!\" className=\"avatar avatar-lg\">\n                            <span className=\"fe fe-32 fe-upload text-muted mb-0\"></span>\n                            </a>\n                            <div className=\"card-text my-2\">\n                                <strong className=\"card-title my-0\">Upload Personal Document </strong>\n                                <p className=\"small\"><span className=\"badge badge-dark\" style={{fontSize: 15}}>{personalDocuments !== 0? `${personalDocuments.length} documents uploaded`: \"No documents uploaded\"}</span></p>\n                            </div>\n                            </div> \n                           \n                        </div> \n                        </div> \n                        \n                    </div> \n\n\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12\">\n                        <h2 className=\"h5 page-title\">Reciepts</h2>\n                        <p className=\"text-muted\">You are required to upload scanned copies of your original reciepts</p>\n                            {/* Personal Documents Card */}\n                        <div className=\"card shadow mb-4\"  onClick={() => RecieptDocumentWidget()} style={{cursor: \"pointer\"}}>\n                            <div className=\"card-body text-center\">\n                            <a href=\"#!\" className=\"avatar avatar-lg\">\n                            <span className=\"fe fe-32 fe-upload text-muted mb-0\"></span>\n                            </a>\n                            <div className=\"card-text my-2\">\n                                <strong className=\"card-title my-0\">Upload Reciepts </strong>\n                               \n                                <p className=\"small\"><span className=\"badge badge-dark\"  style={{fontSize: 15}}>{recieptDocuments? `${recieptDocuments.length} reciepts uploaded`: \"No reciepts uploaded\"}</span></p>\n                            </div>\n                            </div> \n                           \n                        </div> \n                        </div> \n                        \n                    </div> \n\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12\">\n                        <h2 className=\"h5 page-title\">Course Forms</h2>\n                        <p className=\"text-muted\">You are required to upload scanned copies of your course forms (Completely filled and signed).</p>\n                            {/* Personal Documents Card */}\n                        <div className=\"card shadow mb-4\" onClick={() => CourseFormDocumentsWidget()} style={{cursor: \"pointer\"}}>\n                            <div className=\"card-body text-center\">\n                            <a href=\"#!\" className=\"avatar avatar-lg\">\n                            <span className=\"fe fe-32 fe-upload text-muted mb-0\"></span>\n                            </a>\n                            <div className=\"card-text my-2\">\n                                <strong className=\"card-title my-0\">Upload Course Forms </strong>\n                               \n                                <p className=\"small\"><span className=\"badge badge-dark\" style={{fontSize: 15}}>{courseFormDocuments? `${courseFormDocuments.length} course form uploaded`: \"No course forms uploaded\"}</span></p>\n                            </div>\n                            </div> \n                           \n                        </div> \n                        </div> \n                        \n                    </div> \n\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12\">\n                            {Loading? <button className=\"btn mb-2 btn-primary btn-lg btn-block\" disabled>Loading...</button> :\n                                  <button onClick={() => CourseRequestSubmit()} type=\"button\" className=\"btn mb-2 btn-primary btn-lg btn-block\">Submit</button>\n                            }\n                      \n                        </div>\n                    </div>\n                    </div>    \n                </main> \n            \n        </React.Fragment>\n    )\n}\n\nexport default CreateClearanceRequest\n","/home/wisdom/Documents/projects/ocs/src/Pages/StudentDashboardDetails.js",["168"],"import React, {useEffect, useState} from 'react'\n\n\n\n// NavBar\nimport StudentNavbar from '../Components/StudentNavbar'\n\n// Sidebar\nimport StudentSidebar from '../Components/StudentSidebar'\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n// react router dom\nimport {useHistory} from 'react-router-dom'\n\n\n\nconst StudentDashboardDetails = (props) => {\n\n    const clearanceUid = props.match.params.uid\n\n    // init useHistory\n    const history = useHistory()\n\n    // init clearance request details state\n    const [clearanceRequestDetails, setClearanceRequestDetails] = useState({})\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged((user) => {\n          if(!user) {\n\n              // return to login\n              return history.push({pathname: '/student/login'}) \n          } else {\n\n            // get current authenticated student details\n            app.database().ref().child(`ClearanceRequest/${clearanceUid}`).on(\"value\", (snapshot) => {\n              if(snapshot.val()) {\n\n                // update clearance request details\n                setClearanceRequestDetails(snapshot.val())\n\n                console.log(snapshot.val())\n                \n              }\n            })   \n\n          }\n        })\n        \n  }, [])\n\n    return (\n        <React.Fragment>\n            <StudentNavbar/>\n            <StudentSidebar/>\n\n            <main role=\"main\" class=\"main-content\">\n        <div class=\"container-fluid\">\n          <div class=\"row justify-content-center\">\n            <div class=\"col-12 col-lg-10 col-xl-8\">\n              <h2 class=\"h3 mb-4 page-title\">My Clearance Request Details</h2>\n              <div class=\"my-4\">\n               \n                <div class=\"list-group mb-5 shadow\">\n                 \n                    {clearanceRequestDetails? \n                  <div class=\"list-group-item\">\n                    <div class=\"row align-items-center\">\n                      <div class=\"col\">\n                        <strong class=\"mb-2\">Clearance Status: </strong>\n                        {clearanceRequestDetails.status === \"Pending\" ? \n                             <span class=\"badge badge-pill badge-warning ml-2\" style={{fontSize: 12}}>Pending</span>\n                             :\n                             clearanceRequestDetails.status === \"Rejected\" ? \n                             <span class=\"badge badge-pill badge-danger ml-2\" style={{fontSize: 12}}>Declined</span> :\n                             clearanceRequestDetails.status === \"Cleared\" ?\n                             <span class=\"badge badge-pill badge-success ml-2\" style={{fontSize: 12}}>Cleared</span> :\n                             <span class=\"badge badge-pill badge-primary ml-2\" style={{fontSize: 12}}>Loading...</span>\n                    }\n                       \n                      </div> \n                      <div class=\"col-auto\">\n                        <button data-toggle=\"modal\" data-target=\".modal-full\" class=\"btn btn-primary btn-sm\">Print</button>\n                      </div>\n                    </div>\n                  </div> \n                  :\n                  \n                    <div>Loading...</div>\n                    }\n                  \n                </div> \n                <h5 class=\"mb-0\">Personal Documents</h5>\n                <p>List of personal documents uploaded.</p>\n                <table class=\"table border bg-white\">\n                  <thead>\n                    <tr>\n                      <th>S/N</th>\n                      <th>File Link</th>\n                     \n                    </tr>\n                  </thead>\n                  <tbody>\n                  {clearanceRequestDetails.personalDocuments? \n                  clearanceRequestDetails.personalDocuments.map((clearance_request, index) => {\n                    return <React.Fragment key={index}>\n\n                    <tr>\n                      <th scope=\"col\">{index+1}</th>\n                      <td><a href={clearance_request}>{`Personal Document ${index+1}`}</a></td>\n                    </tr>\n  \n                    </React.Fragment>\n                  })\n                  \n                     :\n                    <div className=\"text-center\">Loading...</div>\n                  \n                  }\n                    \n            \n                  </tbody>\n                </table>\n\n\n\n                <h5 class=\"mb-0 mt-5\">Reciept Documents</h5>\n                <p>List of reciept documents uploaded.</p>\n                <table class=\"table border bg-white\">\n                  <thead>\n                    <tr>\n                      <th>S/N</th>\n                      <th>File Link</th>\n                     \n                    </tr>\n                  </thead>\n                  <tbody>\n                  {clearanceRequestDetails.recieptDocuments? \n                  clearanceRequestDetails.recieptDocuments.map((reciept, index) => {\n                    return <React.Fragment key={index}>\n\n                    <tr>\n                      <th scope=\"col\">{index+1}</th>\n                      <td><a href={reciept}>{`Reciept ${index+1}`}</a></td>\n                    </tr>\n                    </React.Fragment>\n\n                        })\n                                          \n                        :\n                        <div className=\"text-center\">Loading...</div>\n\n                        }\n                   \n                  </tbody>\n                </table>\n\n\n\n                <h5 class=\"mb-0 mt-5\">Course Form Documents</h5>\n                <p>List of course form documents uploaded.</p>\n                <table class=\"table border bg-white\">\n                  <thead>\n                    <tr>\n                      <th>S/N</th>\n                      <th>File Link</th>\n                     \n                    </tr>\n                  </thead>\n                  <tbody>\n                  {clearanceRequestDetails.courseFormDocuments? \n                  clearanceRequestDetails.courseFormDocuments.map((courseForm, index) => {\n                    return <React.Fragment key={index}>\n                      <tr>\n                      <th scope=\"col\">{index+1}</th>\n                      <td><a href={courseForm}>{`Course Form ${index+1}`}</a></td>\n                    </tr>\n                    </React.Fragment>\n                   \n\n                  })\n                                          \n                  :\n                  <div className=\"text-center\">Loading...</div>\n\n                  }\n            \n                  </tbody>\n                </table>\n\n                \n               \n              </div> \n            </div> \n          </div> \n        </div> \n\n\n\n        <div class=\"modal fade modal-full\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\n              <button aria-label=\"\" type=\"button\" class=\"close px-2\" data-dismiss=\"modal\" aria-hidden=\"true\">\n                          <span aria-hidden=\"true\">×</span>\n              </button>\n      \n        <div class=\"container-fluid mt-5\">\n          <div class=\"row justify-content-center\">\n            <div class=\"col-12 col-lg-10 col-xl-8\">\n              <div class=\"row align-items-center mb-4\">\n                <div class=\"col\">\n                  <h2 class=\"h5 page-title\"><small class=\"text-muted text-uppercase\">Generated Print Out</small></h2>\n                </div>\n                <div class=\"col-auto\">\n                  <button onClick={() => window.print()} type=\"button\" class=\"btn btn-secondary\">Print</button>\n                 \n                </div>\n              </div>\n\n              <div class=\"card shadow\">\n                <div class=\"card-body p-5\">\n                  <div class=\"row mb-5\">\n                    <div class=\"col-12 text-center mb-4\">\n                      <img src=\"/assets/images/eua-logo.png\" style={{width: 80, height: 80}} class=\"navbar-brand-img brand-sm mx-auto mb-4\" alt=\"...\" />\n                      <h2 class=\"mb-0 text-uppercase\">EVANGEL UNIVERSITY AKAEZE</h2>\n                      <p class=\"text-muted\" style={{fontSize: 18}}>Graduating Students Clearance</p>\n                    </div>\n                    <div class=\"col-md-7\">\n                      \n                      <p class=\"mb-4\"><strong>FIRST NAME:</strong></p>\n                      <p class=\"mb-4\"><strong>LAST NAME (Surname): </strong></p>\n                      <p class=\"mb-4\"><strong>REGISTRATION NUMBER: </strong></p>\n                      <p class=\"mb-4\"><strong>COURSE: </strong></p>\n                      <p class=\"mb-4\"><strong>DEPARTMENT: </strong></p>\n                      <p class=\"mb-4\"><strong>STATUS: </strong></p>\n                     \n                    </div>\n                    <div class=\"col-md-5\">\n                     \n                      <p class=\"mb-4\">\n                        <strong>{`${clearanceRequestDetails.studentFirstName}`}</strong></p>\n                      \n\n                      <p class=\"mb-4\">\n                        <strong>{`${clearanceRequestDetails.studentLastName}`}</strong></p>\n\n\n                        <p class=\"mb-4\">\n                        <strong>{`${clearanceRequestDetails.studentRegNo}`}</strong></p>\n\n                        <p class=\"mb-4\">\n                        <strong>{`${clearanceRequestDetails.studentCourse}`}</strong></p>\n\n                        <p class=\"mb-4\">\n                        <strong>{`${clearanceRequestDetails.studentDepartment}`}</strong></p>\n\n                        <p class=\"mb-4\">\n                        <strong style={{fontSize: 20}}>{`${clearanceRequestDetails.status}`}</strong></p>\n\n\n                     \n                    </div>\n                  </div> \n                  </div>\n                  </div>\n\n              </div>\n              </div>\n              </div>\n             \n                        \n        </div>\n       \n       \n      </main> \n            \n        </React.Fragment>\n    )\n}\n\nexport default StudentDashboardDetails\n","/home/wisdom/Documents/projects/ocs/src/Pages/AddUser.js",["169","170","171"],"import React, {useEffect, useState} from 'react'\n\n// firebase app\nimport app from '../utils/firebaseConfig'\nimport secondaryApp from '../utils/firebaseConfigSecondary'\n\n\n// react toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// react router dom\nimport {useHistory, Link} from 'react-router-dom'\n\n\n// NavBar\nimport NavBar from '../Components/NavBar'\n\n// Sidebar\nimport StaffSidebar from '../Components/StaffSidebar'\n\n\nconst AddUser = () => {\n\n     // init userAuthenticated\n   const [userAuthenticated, setUserAuthenticated] = useState(false)\n\n   // init history\n   const history = useHistory()\n \n \n   useEffect(() => {\n     app.auth().onAuthStateChanged((user) => {\n       if(!user) {\n \n           // return to login\n           return history.push({pathname: '/staff/login'}) \n       } else {\n          \n          setUserAuthenticated(true)\n \n       }\n   })\n   }, [])\n\n\n        //    init user state\n        const [userData, setUserData] = useState({\n            firstName: \"\",\n            lastName: \"\",\n            middleName: \"\",\n            email: \"\",\n            password: \"\",\n            addUserBtn: \"Add User\"\n        })\n\n        // destructure\n        const {firstName, lastName, middleName, email, password, addUserBtn} = userData\n\n\n        // handle change\n        const handleChange = (data) => (e) => {\n            setUserData({...userData, [data]: e.target.value})\n\n            console.log(userData)\n        }\n\n        // handle submit\n        const handleSubmit = (e) => {\n            e.preventDefault()\n\n            // set add user btn \n            setUserData({...userData, addUserBtn: \"Loading...\"})\n\n            // validate\n            if(!firstName) {\n                return toast.error(\"Please enter first name\")\n            }\n\n            if(!lastName) {\n                return toast.error(\"Please enter last name\")\n            }\n            if(!email) {\n                return toast.error(\"Please enter email address\")\n            }\n            if(!password) {\n                return toast.error(\"Please enter password\")\n            }\n\n\n\n            // get user data\n            const user_data = {\n                firstName: firstName,\n                middleName: middleName,\n                lastName: lastName,\n                email: email,\n                admin: false\n               \n            }\n\n\n            // create user with email and password\n            secondaryApp.auth().createUserWithEmailAndPassword(user_data.email, password)\n            .then((data) => {\n\n                // create doctor profile\n            const rootRef = app.database().ref().child(\"Staff\")\n\n            // create a user Ref\n            const staffRef = rootRef.child(data.user.uid)\n\n            // update data to database\n            staffRef.set(user_data, (error) => {\n                if (error) {\n                     // set user data \n                    setUserData({...userData, addUserBtn: \"Add user\"})\n                    return toast.error(error)\n                } else {\n                    // set user data \n                    setUserData({...userData, addUserBtn: \"Add user\"})\n\n                    // sign out user\n                    secondaryApp.auth().signOut();\n\n                    // return success\n                    return toast.success(\"Registration Successful\")\n                }\n\n            })\n\n            })\n            .catch((error) => {\n                 // set user data \n                setUserData({...userData, addUserBtn: \"Add user\"})\n                console.log(error.message)\n                return toast.error(\"Oops! An error has occured\")\n            })\n\n\n            \n\n\n        }\n\n\n\n    return (\n        <React.Fragment>\n            <ToastContainer/>\n            <NavBar/>\n            <StaffSidebar/>\n\n            <main role=\"main\" class=\"main-content\">\n        <div class=\"container-fluid\">\n          <div class=\"row justify-content-center\">\n            <div class=\"col-12 col-xl-10\">\n              <div class=\"row align-items-center my-4\">\n                <div class=\"col\">\n                  <h2 class=\"h3 mb-0 page-title\">Add User</h2>\n                </div>\n                \n              </div>\n              <form onSubmit={handleSubmit}>\n                <hr class=\"my-4\" />\n                \n                <div class=\"form-row\">\n                    {/* first name */}\n                  <div class=\"form-group col-md-4\">\n                    <label for=\"firstname\">Firstname</label>\n                    <input  onChange={handleChange('firstName')} name=\"firstName\" type=\"text\" id=\"firstname\" class=\"form-control\" />\n                  </div>\n                  {/* middlename */}\n                  <div class=\"form-group col-md-4\">\n                    <label for=\"middlename\">Middlename</label>\n                    <input onChange={handleChange('middleName')} name=\"middleName\" type=\"text\" id=\"middlename\" class=\"form-control\" />\n                  </div>\n                    {/* lastname */}\n                  <div class=\"form-group col-md-4\">\n                    <label for=\"lastname\">Lastname</label>\n                    <input onChange={handleChange('lastName')} name=\"lastName\" type=\"text\" id=\"lastname\" class=\"form-control\" />\n                  </div>\n                </div>\n                <div class=\"form-row\">\n                  <div class=\"form-group col-md-12\">\n                    <label for=\"regNo\">Email Address</label>\n                    <input onChange={handleChange('email')} name=\"email\" type=\"email\" class=\"form-control\" id=\"email\" />\n                  </div>\n                 \n                </div>\n\n                <div class=\"form-row\">\n                  <div class=\"form-group col-md-12\">\n                    <label for=\"regNo\">Password</label>\n                    <input onChange={handleChange('password')} name=\"password\" type=\"password\" class=\"form-control\" id=\"password\" />\n                  </div>\n                 \n                </div>\n\n              \n               \n                \n                <hr class=\"my-4\" />\n                <div class=\"form-row\">\n                 \n                   \n                  <div class=\"col-md-6 text-right\">\n                    <button type=\"submit\" class=\"btn btn-primary\">{addUserBtn}</button>\n                  </div>\n               \n                </div>\n              </form>\n            </div> \n          </div> \n        </div> \n        \n      </main> \n            \n        </React.Fragment>\n    )\n}\n\nexport default AddUser\n","/home/wisdom/Documents/projects/ocs/src/utils/firebaseConfigSecondary.js",[],"/home/wisdom/Documents/projects/ocs/src/Pages/ViewStaff.js",["172","173","174","175"],"import React, {useEffect, useState} from 'react'\n\n// NavBar\nimport NavBar from '../Components/NavBar'\n\n// Sidebar\nimport StaffSidebar from '../Components/StaffSidebar'\n\n// react router dom\nimport {useHistory, Link} from 'react-router-dom'\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n\n// react toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst ViewStaff = () => {\n\n    // init userAuthenticated\n   const [userAuthenticated, setUserAuthenticated] = useState(false)\n\n    // users state\n    const [userList, setUserList] = useState({})\n\n   // init history\n   const history = useHistory()\n \n \n   useEffect(() => {\n     app.auth().onAuthStateChanged((user) => {\n       if(!user) {\n \n           // return to login\n           return history.push({pathname: '/staff/login'}) \n       } else {\n          \n          setUserAuthenticated(true)\n\n        //   Fetch all users\n        app.database().ref().child(\"Staff\").on(\"value\", (snapshot) => {\n            if(snapshot.val()) {\n                // update setUser list \n                setUserList(snapshot.val())\n            }\n        })\n \n       }\n   })\n   }, [])\n\n\n    // init handle Delete User\n        const handleDeleteUser = (uid) => {\n            app.database().ref().child(`Staff/${uid}`).remove((error) => {\n                if(error) {\n                  console.log(error)\n                  return toast.error(\"Oops! An error has occured\")\n                }\n                \n                return toast.success(\"Staff deleted successfully\")\n              })\n        }\n\n    return (\n        <React.Fragment>\n\n            <NavBar/>\n            <ToastContainer/>\n            <StaffSidebar/>\n\n                <main role=\"main\" class=\"main-content\">\n                    <div class=\"container-fluid\">\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-12\">\n                        <div class=\"row\">\n                        \n                            <div class=\"col-md-12 my-4\">\n                            <h2 class=\"h4 mb-1\">Staff List</h2>\n                            <div class=\"card shadow\">\n                                <div class=\"card-body\">\n                               \n                                \n                                <table class=\"table table-borderless table-hover\">\n                                    <thead>\n                                    <tr>\n                                       \n                                        <th>S/N</th>\n                                        <th>First Name</th>\n                                        <th>Middle Name</th>\n                                        <th>Last Name</th>\n                                        <th class=\"w-25\">Email Address</th>\n                                        <th>Action</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                        {Object.keys(userList).map((key, index) => {\n                                            return <React.Fragment key={index}>\n                                                 <tr>\n                                       \n                                                    <td>\n                                                    <p class=\"mb-0 text-muted\"><strong>{index+1}</strong></p>\n                                                    </td>\n                                                    <td>\n                                                        <p class=\"mb-0 text-muted\"><strong>{userList[key].firstName}</strong></p>\n                                                    \n                                                    </td>\n                                                    <td>\n                                                        <p class=\"mb-0 text-muted\"><strong>{userList[key].middleName}</strong></p>\n                                                    </td>\n                                                    <td>\n                                                        <p class=\"mb-0 text-muted\"><strong>{userList[key].lastName}</strong></p>\n                                                    </td>\n                                                    \n                                                    <td class=\"text-muted\">\n                                                        <p class=\"mb-0 text-muted\">{userList[key].email}</p>\n                                                    </td>\n                                                    <td><button class=\"btn btn-sm dropdown-toggle more-horizontal\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                        <span class=\"text-muted sr-only\">Action</span>\n                                                    </button>\n                                                    <div class=\"dropdown-menu dropdown-menu-right\">\n                                                       \n                                                        <a onClick={() => handleDeleteUser(key)} class=\"dropdown-item\" href=\"#\">Remove</a>\n                                                       \n                                                    </div>\n                                                    </td>\n                                                </tr>\n                                            </React.Fragment>\n                                        })}\n                                   \n                                    \n                                 \n                                    </tbody>\n                                </table>\n                                \n                                </div>\n                            </div>\n                            </div> \n                        </div>\n                        </div>\n                        </div>\n                        \n                    </div> \n                    \n                </main> \n            \n        </React.Fragment>\n    )\n}\n\nexport default ViewStaff\n","/home/wisdom/Documents/projects/ocs/src/Pages/ViewStudentData.js",["176","177","178","179"],"import React, {useEffect, useState} from 'react'\n\n// NavBar\nimport NavBar from '../Components/NavBar'\n\n// Sidebar\nimport StaffSidebar from '../Components/StaffSidebar'\n\n// react router dom\nimport {useHistory, Link} from 'react-router-dom'\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n// react toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nconst ViewStudentData = () => {\n\n\n     // init userAuthenticated\n   const [userAuthenticated, setUserAuthenticated] = useState(false)\n\n   // users state\n   const [studentDataList, setStudentDataList] = useState({})\n\n   // init history\n   const history = useHistory()\n\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      if(!user) {\n\n          // return to login\n          return history.push({pathname: '/staff/login'}) \n      } else {\n         \n         setUserAuthenticated(true)\n\n       //   Fetch all users\n       app.database().ref().child(\"StudentData\").on(\"value\", (snapshot) => {\n           if(snapshot.val()) {\n               // update setUser list \n               setStudentDataList(snapshot.val())\n\n               console.log(snapshot.val())\n           }\n       })\n\n      }\n  })\n  }, [])\n\n\n//    handle delete student data\n        const deleteStudentData = (uid) => {\n            app.database().ref().child(`StudentData/${uid}`).remove((error) => {\n                if(error) {\n                  console.log(error)\n                  return toast.error(\"Oops! An error has occured\")\n                }\n  \n                return toast.success(\"Student Data deleted successfully\")\n              })\n        }\n\n\n    return (\n        <React.Fragment>\n\n            <NavBar/>\n            <ToastContainer/>\n            <StaffSidebar/>\n\n\n            <main role=\"main\" class=\"main-content\">\n                    <div class=\"container-fluid\">\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-12\">\n                        <div class=\"row\">\n                        \n                            <div class=\"col-md-12 my-4\">\n                            <h2 class=\"h4 mb-1\">Student Data List</h2>\n                            <div class=\"card shadow\">\n                                <div class=\"card-body\">\n                               \n                                \n                                <table class=\"table table-borderless table-hover\">\n                                    <thead>\n                                    <tr>\n                                       \n                                        <th>S/N</th>\n                                        <th>First Name</th>\n                                        <th>Middle Name</th>\n                                        <th>Last Name</th>\n                                        <th class=\"w-25\">Registration Number</th>\n                                        <th class=\"w-25\">Registered</th>\n                                        <th>Action</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                        {Object.keys(studentDataList).map((key, index) => {\n                                            return <React.Fragment key={index}>\n                                                 <tr>\n                                       \n                                                    <td>\n                                                    <p class=\"mb-0 text-muted\"><strong>{index+1}</strong></p>\n                                                    </td>\n                                                    <td>\n                                                        <p class=\"mb-0 text-muted\"><strong>{studentDataList[key].firstName}</strong></p>\n                                                    \n                                                    </td>\n                                                    <td>\n                                                        <p class=\"mb-0 text-muted\"><strong>{studentDataList[key].middleName}</strong></p>\n                                                    </td>\n                                                    <td>\n                                                        <p class=\"mb-0 text-muted\"><strong>{studentDataList[key].lastName}</strong></p>\n                                                    </td>\n                                                    \n                                                    <td class=\"text-muted\">\n                                                        <p class=\"mb-0 text-muted\">{studentDataList[key].regNo}</p>\n                                                    </td>\n                                                    <td class=\"text-muted\">\n                                                        <p class=\"mb-0 text-muted\">{studentDataList[key].registered === true? \"true\" : \"false\"}</p>\n                                                    </td>\n                                                    <td><button class=\"btn btn-sm dropdown-toggle more-horizontal\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                        <span class=\"text-muted sr-only\">Action</span>\n                                                    </button>\n                                                    <div class=\"dropdown-menu dropdown-menu-right\">\n                                                       \n                                                        <a onClick={() => deleteStudentData(key)} class=\"dropdown-item\" href=\"#\">Remove</a>\n                                                       \n                                                    </div>\n                                                    </td>\n                                                </tr>\n                                            </React.Fragment>\n                                        })}\n                                   \n                                    \n                                 \n                                    </tbody>\n                                </table>\n                                \n                                </div>\n                            </div>\n                            </div> \n                        </div>\n                        </div>\n                        </div>\n                        \n                    </div> \n                    \n                </main> \n            \n        </React.Fragment>\n    )\n}\n\nexport default ViewStudentData\n","/home/wisdom/Documents/projects/ocs/src/Pages/StaffViewClearanceRequest.js",["180","181","182","183","184"],"/home/wisdom/Documents/projects/ocs/src/Pages/StaffViewClearanceDetails.js",["185","186","187","188","189"],"import React, {useState, useEffect} from 'react'\n\n// NavBar\nimport NavBar from '../Components/NavBar'\n\n// Sidebar\nimport StaffSidebar from '../Components/StaffSidebar'\n\n// react router dom\nimport {useHistory, Link} from 'react-router-dom'\n\n// firebase app\nimport app from '../utils/firebaseConfig'\n\n\n\n// react toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nconst StaffViewClearanceDetails = (props) => {\n\n    const clearanceUid = props.match.params.uid\n\n    \n    // init useHistory\n    const history = useHistory()\n\n\n     // init userAuthenticated\n   const [userAuthenticated, setUserAuthenticated] = useState(false)\n\n   // users state\n   const [clearanceDetails, setClearanceDetails] = useState({})\n\n\n   useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      if(!user) {\n\n          // return to login\n          return history.push({pathname: '/student/login'}) \n      } else {\n\n        // set authenticated user to true\n        setUserAuthenticated(true)\n\n        // get current authenticated student details\n        app.database().ref().child(`ClearanceRequest/${clearanceUid}`).on(\"value\", (snapshot) => {\n          if(snapshot.val()) {\n\n            // update clearance request details\n            setClearanceDetails(snapshot.val())\n\n            console.log(snapshot.val())\n            \n          }\n        })   \n\n      }\n    })\n    \n}, [])\n\n\n        // init clearanceStatus state\n        const [clearanceStatus, setClearanceStatus] = useState(null)\n\n        // init clearance Message state\n        const [clearanceMessage, setClearanceMessage] = useState(null)\n\n        // init MessageBox visibility state\n        const [messageBoxVisibility, setMessageBoxVisibility] = useState(false)\n\n\n        // change clearance status function\n        const changeClearanceStatus = (status) => {\n           if(status) {\n               if(status === \"Rejected\") {\n                    // set message box visiblity to true\n                    setMessageBoxVisibility(true)\n\n                    // init status data\n                    const statusData = {\n                        status: status\n                    }\n\n                    // update clearance request database\n                    app.database().ref().child(`ClearanceRequest/${clearanceUid}`).update(statusData, (error) => {\n                        if(error) {\n                            console.log(error.message)\n                            return toast.error(\"Oops! An error has occured\")\n                        }\n\n                        // return success\n                        return toast.success(\"Status updated successfully\")\n                    })\n               } else {\n                   setMessageBoxVisibility(false)\n\n                   // init status data\n                   const statusData = {\n                        status: status\n                    }\n\n                    // update clearance request database\n                    app.database().ref().child(`ClearanceRequest/${clearanceUid}`).update(statusData, (error) => {\n                        if(error) {\n                            console.log(error.message)\n                            return toast.error(\"Oops! An error has occured\")\n                        }\n\n                        // return success\n                        return toast.success(\"Status updated successfully\")\n                    })\n                   \n               }\n           }\n        }\n\n        // handle Clearance Message func\n        const handleClearanceMessage = (message) => {\n            \n            setClearanceMessage(message)\n           \n        }\n\n\n        // handle Submit message\n        const handleSubmitMessage = () => {\n            if(!clearanceMessage) {\n                return toast.error(\"Please enter message\")\n            }\n\n            // get message data\n            const messageData = {\n                message: clearanceMessage\n            }\n\n\n             // update clearance request database\n            app.database().ref().child(`ClearanceRequest/${clearanceUid}`).update(messageData, (error) => {\n                if(error) {\n                    console.log(error.message)\n                    return toast.error(\"Oops! An error has occured\")\n                }\n\n                // return success\n                return toast.success(\"Message Sent successfully\")\n            })\n        }\n\n\n\n    return (\n        <React.Fragment>\n            <NavBar/>\n            <ToastContainer/>\n            <StaffSidebar/>\n\n            <main role=\"main\" class=\"main-content\">\n        <div class=\"container-fluid\">\n          <div class=\"row justify-content-center\">\n            <div class=\"col-12 col-lg-10 col-xl-8\">\n              <h2 class=\"h3 mb-4 page-title\">Clearance Request Details</h2>\n              <div class=\"my-4\">\n               \n                <div class=\"list-group mb-5 shadow\">\n                  <div class=\"list-group-item\">\n                    <div class=\"row align-items-center\">\n                      <div class=\"col\">\n                        <strong class=\"mb-2\">Update Clearance Status</strong>\n                        \n                      </div> \n                      <div class=\"col-auto\">\n                        {/* Clearance Status */}\n                        <div class=\"form-row\">\n                        <div class=\"form-group\">\n                        \n                        <select onChange={(e) => changeClearanceStatus(e.target.value)} class=\"form-control\" id=\"clearance_status\">\n                          <option value=\"\">Select Status</option>\n                          <option value=\"Pending\">Pending</option>\n                          <option value=\"Cleared\">Cleared</option>\n                          <option value=\"Rejected\">Rejected</option>\n                         \n                        </select>\n                        </div>\n                        </div>\n                      </div> \n                    </div> \n                  </div>\n\n                    {messageBoxVisibility? <React.Fragment>\n                        <div class=\"list-group-item\">\n                    <div class=\"row align-items-center\">\n                      <div class=\"col\">\n                        <strong class=\"mb-2\">Send message to student</strong>\n                        <div className=\"form-group\">\n                      \n                            <input value={clearanceMessage} name=\"message\" onChange={(e) => handleClearanceMessage(e.target.value)} type=\"text\"  className=\"form-control form-control-lg\" placeholder=\"Message\" required=\"\" />\n                        </div>\n                      </div> \n                      <div class=\"col-auto\">\n                        {/* Send Button */}\n                        <button onClick={() => handleSubmitMessage()} className=\"btn btn-primary btn-sm\">Send</button>\n                      </div> \n                    </div> \n                  </div> \n                    </React.Fragment> : \n                    null\n                    }\n                   \n                    {clearanceDetails? \n                  <div class=\"list-group-item\">\n                    <div class=\"row align-items-center\">\n                      <div class=\"col\">\n                        <strong class=\"mb-2\">Clearance Status: </strong>\n                        {clearanceDetails.status === \"Pending\" ? \n                             <span class=\"badge badge-pill badge-warning ml-2\" style={{fontSize: 12}}>Pending</span>\n                             :\n                             clearanceDetails.status === \"Rejected\" ? \n                             <span class=\"badge badge-pill badge-danger ml-2\" style={{fontSize: 12}}>Declined</span> :\n                             clearanceDetails.status === \"Cleared\" ? \n                             <span class=\"badge badge-pill badge-success ml-2\" style={{fontSize: 12}}>Cleared</span> :\n                             <span class=\"badge badge-pill badge-primary ml-2\" style={{fontSize: 12}}>Loading...</span>\n                    }\n                       \n                      </div> \n                     \n                    </div>\n                  </div> \n                  :\n                  \n                    <div>Loading...</div>\n                    }\n                    \n                    {clearanceDetails? \n                    <div class=\"list-group-item\">\n                        <div class=\"row align-items-center\">\n                        <div class=\"col\">\n                            <strong class=\"mb-2\">Message</strong>\n                            <p class=\"text-muted mb-0\">{clearanceDetails.message}</p>\n                        </div> \n                        \n                        </div> \n                    </div> : \n                    \"None\"\n                        }\n                  \n                </div> \n                <h5 class=\"mb-0\">Student Personal Documents</h5>\n                <p>List of uploaded student personal documents.</p>\n                <table class=\"table border bg-white\">\n                  <thead>\n                    <tr>\n                      <th>S/N</th>\n                      <th>File Link</th>\n                     \n                    </tr>\n                  </thead>\n                  <tbody>\n                  {clearanceDetails.personalDocuments? \n                  clearanceDetails.personalDocuments.map((clearance_request, index) => {\n                    return <React.Fragment key={index}>\n\n                    <tr>\n                      <th scope=\"col\">{index+1}</th>\n                      <td><a href={clearance_request}>{`Personal Document ${index+1}`}</a></td>\n                    </tr>\n  \n                    </React.Fragment>\n                  })\n                  \n                     :\n                    <div className=\"text-center\">Loading...</div>\n                  \n                  }\n                    \n            \n                  </tbody>\n                </table>\n\n\n\n                <h5 class=\"mb-0 mt-5\">Student Reciept Documents</h5>\n                <p>List of uploaded student reciept documents.</p>\n                <table class=\"table border bg-white\">\n                  <thead>\n                    <tr>\n                      <th>S/N</th>\n                      <th>File Link</th>\n                     \n                    </tr>\n                  </thead>\n                  <tbody>\n                  {clearanceDetails.recieptDocuments? \n                  clearanceDetails.recieptDocuments.map((reciept, index) => {\n                    return <React.Fragment key={index}>\n\n                    <tr>\n                      <th scope=\"col\">{index+1}</th>\n                      <td><a href={reciept}>{`Reciept ${index+1}`}</a></td>\n                    </tr>\n                    </React.Fragment>\n\n                        })\n                                          \n                        :\n                        <div className=\"text-center\">Loading...</div>\n\n                        }\n                   \n                  </tbody>\n                </table>\n\n\n\n                <h5 class=\"mb-0 mt-5\">Student Course Form Documents</h5>\n                <p>List of uploaded student course form documents.</p>\n                <table class=\"table border bg-white\">\n                  <thead>\n                    <tr>\n                      <th>S/N</th>\n                      <th>File Link</th>\n                     \n                    </tr>\n                  </thead>\n                  <tbody>\n                  {clearanceDetails.courseFormDocuments? \n                  clearanceDetails.courseFormDocuments.map((courseForm, index) => {\n                    return <React.Fragment key={index}>\n                      <tr>\n                      <th scope=\"col\">{index+1}</th>\n                      <td><a href={courseForm}>{`Course Form ${index+1}`}</a></td>\n                    </tr>\n                    </React.Fragment>\n                   \n\n                  })\n                                          \n                  :\n                  <div className=\"text-center\">Loading...</div>\n\n                  }\n            \n                  </tbody>\n                </table>\n\n                \n               \n              </div> \n            </div> \n          </div> \n        </div> \n       \n       \n      </main> \n            \n        </React.Fragment>\n    )\n}\n\nexport default StaffViewClearanceDetails\n","/home/wisdom/Documents/projects/ocs/src/Pages/Home.js",[],"/home/wisdom/Documents/projects/ocs/src/Components/clientNavBar.js",["190","191","192"],"import React from 'react'\n\n\n// react router dom\nimport {Link} from 'react-router-dom'\n\nconst StudentNavbar =() => {\n\n    return (\n        <React.Fragment>\n\n                <nav class=\"navbar navbar-expand-lg navbar-light\">\n                <a class=\"navbar-brand\" href=\"#\">\n                <img src=\"/assets/images/eua-logo.png\" className=\"mr-2\" style={{height:50, width:50}}></img>\n                    Evangel University Akaeze\n                </a>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul class=\"navbar-nav ml-auto mr-4\">\n                    <li class=\"nav-item active mr-3\">\n                        <Link to=\"/\" class=\"nav-link\">Home <span class=\"sr-only\">(current)</span></Link>\n                    </li>\n                    <li class=\"nav-item mr-3\">\n                        <a class=\"nav-link\" href=\"#\">About</a>\n                    </li>\n\n                    <li class=\"nav-item mr-3\">\n                        <Link to=\"/staff/login\" class=\"nav-link\">Staff Login</Link>\n                    </li>\n                   \n                    \n                    </ul>\n                    \n                </div>\n                </nav>\n\n\n               \n              \n        </React.Fragment>\n    )\n}\n\nexport default StudentNavbar\n",["193","194"],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":69,"column":55,"nodeType":"201","messageId":"202","endLine":69,"endColumn":57},{"ruleId":"203","severity":1,"message":"204","line":106,"column":21,"nodeType":"205","endLine":106,"endColumn":60},{"ruleId":"206","severity":1,"message":"207","line":107,"column":21,"nodeType":"205","endLine":107,"endColumn":84},{"ruleId":"203","severity":1,"message":"204","line":81,"column":21,"nodeType":"205","endLine":81,"endColumn":103},{"ruleId":"206","severity":1,"message":"207","line":82,"column":21,"nodeType":"205","endLine":82,"endColumn":84},{"ruleId":"208","severity":1,"message":"209","line":14,"column":21,"nodeType":"210","messageId":"211","endLine":14,"endColumn":25},{"ruleId":"208","severity":1,"message":"212","line":21,"column":10,"nodeType":"210","messageId":"211","endLine":21,"endColumn":27},{"ruleId":"213","severity":1,"message":"214","line":73,"column":6,"nodeType":"215","endLine":73,"endColumn":8,"suggestions":"216"},{"ruleId":"206","severity":1,"message":"217","line":180,"column":31,"nodeType":"205","endLine":180,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":181,"column":31,"nodeType":"205","endLine":181,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":182,"column":31,"nodeType":"205","endLine":182,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":202,"column":31,"nodeType":"205","endLine":202,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":203,"column":31,"nodeType":"205","endLine":203,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":204,"column":31,"nodeType":"205","endLine":204,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":224,"column":31,"nodeType":"205","endLine":224,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":225,"column":31,"nodeType":"205","endLine":225,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":226,"column":31,"nodeType":"205","endLine":226,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":246,"column":31,"nodeType":"205","endLine":246,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":247,"column":31,"nodeType":"205","endLine":247,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":248,"column":31,"nodeType":"205","endLine":248,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":268,"column":31,"nodeType":"205","endLine":268,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":269,"column":31,"nodeType":"205","endLine":269,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":270,"column":31,"nodeType":"205","endLine":270,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":290,"column":31,"nodeType":"205","endLine":290,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":291,"column":31,"nodeType":"205","endLine":291,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":292,"column":31,"nodeType":"205","endLine":292,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":312,"column":31,"nodeType":"205","endLine":312,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":313,"column":31,"nodeType":"205","endLine":313,"endColumn":65},{"ruleId":"206","severity":1,"message":"217","line":314,"column":31,"nodeType":"205","endLine":314,"endColumn":65},{"ruleId":"199","severity":1,"message":"218","line":127,"column":62,"nodeType":"201","messageId":"219","endLine":127,"endColumn":64},{"ruleId":"203","severity":1,"message":"204","line":215,"column":21,"nodeType":"205","endLine":215,"endColumn":103},{"ruleId":"206","severity":1,"message":"207","line":216,"column":25,"nodeType":"205","endLine":216,"endColumn":88},{"ruleId":"206","severity":1,"message":"217","line":41,"column":13,"nodeType":"205","endLine":41,"endColumn":182},{"ruleId":"206","severity":1,"message":"207","line":48,"column":15,"nodeType":"205","endLine":48,"endColumn":78},{"ruleId":"206","severity":1,"message":"217","line":39,"column":9,"nodeType":"205","endLine":39,"endColumn":112},{"ruleId":"203","severity":1,"message":"204","line":46,"column":13,"nodeType":"205","endLine":46,"endColumn":84},{"ruleId":"208","severity":1,"message":"209","line":10,"column":21,"nodeType":"210","messageId":"211","endLine":10,"endColumn":25},{"ruleId":"208","severity":1,"message":"212","line":27,"column":11,"nodeType":"210","messageId":"211","endLine":27,"endColumn":28},{"ruleId":"213","severity":1,"message":"214","line":45,"column":7,"nodeType":"215","endLine":45,"endColumn":9,"suggestions":"220"},{"ruleId":"208","severity":1,"message":"212","line":22,"column":10,"nodeType":"210","messageId":"211","endLine":22,"endColumn":27},{"ruleId":"208","severity":1,"message":"221","line":22,"column":29,"nodeType":"210","messageId":"211","endLine":22,"endColumn":49},{"ruleId":"213","severity":1,"message":"214","line":74,"column":6,"nodeType":"215","endLine":74,"endColumn":8,"suggestions":"222"},{"ruleId":"206","severity":1,"message":"217","line":12,"column":9,"nodeType":"205","endLine":12,"endColumn":112},{"ruleId":"203","severity":1,"message":"204","line":20,"column":13,"nodeType":"205","endLine":20,"endColumn":84},{"ruleId":"206","severity":1,"message":"217","line":37,"column":13,"nodeType":"205","endLine":37,"endColumn":182},{"ruleId":"206","severity":1,"message":"217","line":43,"column":15,"nodeType":"205","endLine":43,"endColumn":49},{"ruleId":"206","severity":1,"message":"207","line":44,"column":15,"nodeType":"205","endLine":44,"endColumn":78},{"ruleId":"208","severity":1,"message":"223","line":1,"column":37,"nodeType":"210","messageId":"211","endLine":1,"endColumn":43},{"ruleId":"208","severity":1,"message":"209","line":14,"column":21,"nodeType":"210","messageId":"211","endLine":14,"endColumn":25},{"ruleId":"213","severity":1,"message":"214","line":58,"column":12,"nodeType":"215","endLine":58,"endColumn":14,"suggestions":"224"},{"ruleId":"199","severity":1,"message":"200","line":95,"column":46,"nodeType":"201","messageId":"202","endLine":95,"endColumn":48},{"ruleId":"199","severity":1,"message":"200","line":128,"column":42,"nodeType":"201","messageId":"202","endLine":128,"endColumn":44},{"ruleId":"199","severity":1,"message":"200","line":160,"column":42,"nodeType":"201","messageId":"202","endLine":160,"endColumn":44},{"ruleId":"213","severity":1,"message":"225","line":52,"column":6,"nodeType":"215","endLine":52,"endColumn":8,"suggestions":"226"},{"ruleId":"208","severity":1,"message":"209","line":13,"column":21,"nodeType":"210","messageId":"211","endLine":13,"endColumn":25},{"ruleId":"208","severity":1,"message":"212","line":26,"column":11,"nodeType":"210","messageId":"211","endLine":26,"endColumn":28},{"ruleId":"213","severity":1,"message":"214","line":44,"column":7,"nodeType":"215","endLine":44,"endColumn":9,"suggestions":"227"},{"ruleId":"208","severity":1,"message":"209","line":10,"column":21,"nodeType":"210","messageId":"211","endLine":10,"endColumn":25},{"ruleId":"208","severity":1,"message":"212","line":24,"column":11,"nodeType":"210","messageId":"211","endLine":24,"endColumn":28},{"ruleId":"213","severity":1,"message":"214","line":53,"column":7,"nodeType":"215","endLine":53,"endColumn":9,"suggestions":"228"},{"ruleId":"206","severity":1,"message":"217","line":126,"column":57,"nodeType":"205","endLine":126,"endColumn":129},{"ruleId":"208","severity":1,"message":"209","line":10,"column":21,"nodeType":"210","messageId":"211","endLine":10,"endColumn":25},{"ruleId":"208","severity":1,"message":"212","line":25,"column":11,"nodeType":"210","messageId":"211","endLine":25,"endColumn":28},{"ruleId":"213","severity":1,"message":"214","line":56,"column":6,"nodeType":"215","endLine":56,"endColumn":8,"suggestions":"229"},{"ruleId":"206","severity":1,"message":"217","line":135,"column":57,"nodeType":"205","endLine":135,"endColumn":130},{"ruleId":"208","severity":1,"message":"212","line":26,"column":11,"nodeType":"210","messageId":"211","endLine":26,"endColumn":28},{"ruleId":"208","severity":1,"message":"230","line":32,"column":11,"nodeType":"210","messageId":"211","endLine":32,"endColumn":22},{"ruleId":"208","severity":1,"message":"231","line":32,"column":24,"nodeType":"210","messageId":"211","endLine":32,"endColumn":38},{"ruleId":"213","severity":1,"message":"214","line":61,"column":6,"nodeType":"215","endLine":61,"endColumn":8,"suggestions":"232"},{"ruleId":"206","severity":1,"message":"217","line":282,"column":29,"nodeType":"205","endLine":282,"endColumn":107},{"ruleId":"208","severity":1,"message":"209","line":10,"column":21,"nodeType":"210","messageId":"211","endLine":10,"endColumn":25},{"ruleId":"208","severity":1,"message":"212","line":33,"column":11,"nodeType":"210","messageId":"211","endLine":33,"endColumn":28},{"ruleId":"213","severity":1,"message":"225","line":65,"column":4,"nodeType":"215","endLine":65,"endColumn":6,"suggestions":"233"},{"ruleId":"208","severity":1,"message":"234","line":69,"column":16,"nodeType":"210","messageId":"211","endLine":69,"endColumn":31},{"ruleId":"208","severity":1,"message":"235","line":69,"column":33,"nodeType":"210","messageId":"211","endLine":69,"endColumn":51},{"ruleId":"206","severity":1,"message":"217","line":13,"column":17,"nodeType":"205","endLine":13,"endColumn":50},{"ruleId":"203","severity":1,"message":"204","line":14,"column":17,"nodeType":"205","endLine":14,"endColumn":103},{"ruleId":"206","severity":1,"message":"217","line":27,"column":25,"nodeType":"205","endLine":27,"endColumn":54},{"ruleId":"195","replacedBy":"236"},{"ruleId":"197","replacedBy":"237"},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'userAuthenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["240"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["241"],"'setUserAuthenticated' is assigned a value but never used.",["242"],"'useRef' is defined but never used.",["243"],"React Hook useEffect has missing dependencies: 'clearanceUid' and 'history'. Either include them or remove the dependency array.",["244"],["245"],["246"],["247"],"'studentData' is assigned a value but never used.","'setStudentData' is assigned a value but never used.",["248"],["249"],"'clearanceStatus' is assigned a value but never used.","'setClearanceStatus' is assigned a value but never used.",["238"],["239"],"no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"250","fix":"252"},{"desc":"250","fix":"253"},{"desc":"250","fix":"254"},{"desc":"255","fix":"256"},{"desc":"250","fix":"257"},{"desc":"250","fix":"258"},{"desc":"250","fix":"259"},{"desc":"250","fix":"260"},{"desc":"255","fix":"261"},"Update the dependencies array to be: [history]",{"range":"262","text":"263"},{"range":"264","text":"263"},{"range":"265","text":"263"},{"range":"266","text":"263"},"Update the dependencies array to be: [clearanceUid, history]",{"range":"267","text":"268"},{"range":"269","text":"263"},{"range":"270","text":"263"},{"range":"271","text":"263"},{"range":"272","text":"263"},{"range":"273","text":"268"},[1889,1891],"[history]",[876,878],[1813,1815],[1409,1411],[1245,1247],"[clearanceUid, history]",[932,934],[1185,1187],[1240,1242],[1348,1350],[1425,1427]]